<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files\microsoft visual studio\2022\community\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="17.0">
 <Namespaces>
  <Namespace Name="MyCAD">
   <Messages>
    <Message Id="CAD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'CAD' in namespace name 'MyCAD' by changing it to 'Cad'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="MyCAD.Entities">
   <Messages>
    <Message Id="CAD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'CAD' in namespace name 'MyCAD.Entities' by changing it to 'Cad'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="MyCAD.EntryForms">
   <Messages>
    <Message Id="CAD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'CAD' in namespace name 'MyCAD.EntryForms' by changing it to 'Cad'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="MyCAD.MaterialsDBDataSetTableAdapters">
   <Messages>
    <Message Id="CAD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'CAD' in namespace name 'MyCAD.MaterialsDBDataSetTableAdapters' by changing it to 'Cad'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="MyCAD.Methods">
   <Messages>
    <Message Id="CAD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'CAD' in namespace name 'MyCAD.Methods' by changing it to 'Cad'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="MyCAD.OutputForms">
   <Messages>
    <Message Id="CAD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'CAD' in namespace name 'MyCAD.OutputForms' by changing it to 'Cad'.</Issue>
    </Message>
   </Messages>
  </Namespace>
 </Namespaces>
 <Targets>
  <Target Name="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\bin\Release\MyCAD.exe">
   <Modules>
    <Module Name="mycad.exe">
     <Messages>
      <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
       <Issue Name="NoStrongName" Certainty="95" Level="CriticalError">Sign 'MyCAD.exe' with a strong name key.</Issue>
      </Message>
      <Message Id="CAD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
       <Issue Name="Assembly" Certainty="85" Level="Error">Correct the casing of 'CAD' in assembly name 'MyCAD.exe' by changing it to 'Cad'.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">Mark 'MyCAD.exe' with CLSCompliant(true) because it exposes externally visible types.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Warning">Because assembly 'MyCAD.exe' contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="MyCAD">
       <Types>
        <Type Name="GraphicsExtension" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#DrawEntity(System.Drawing.Graphics,System.Drawing.Pen,MyCAD.Entities.EntityObject)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="g" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsExtension.cs" Line="53">In method 'GraphicsExtension.DrawEntity(this Graphics, Pen, EntityObject)', consider providing a more meaningful name than parameter name 'g'.</Issue>
            </Message>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsExtension.cs" Line="53">In externally visible method 'GraphicsExtension.DrawEntity(this Graphics, Pen, EntityObject)', validate parameter 'entity' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawLine(System.Drawing.Graphics,System.Drawing.Pen,MyCAD.Entities.Line)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="g" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsExtension.cs" Line="43">In method 'GraphicsExtension.DrawLine(this Graphics, Pen, Line)', consider providing a more meaningful name than parameter name 'g'.</Issue>
            </Message>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsExtension.cs" Line="44">In externally visible method 'GraphicsExtension.DrawLine(this Graphics, Pen, Line)', validate parameter 'line' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawPoint(System.Drawing.Graphics,System.Drawing.Pen,MyCAD.Entities.Point)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="g" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsExtension.cs" Line="32">In method 'GraphicsExtension.DrawPoint(this Graphics, Pen, Point)', consider providing a more meaningful name than parameter name 'g'.</Issue>
            </Message>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsExtension.cs" Line="33">In externally visible method 'GraphicsExtension.DrawPoint(this Graphics, Pen, Point)', validate parameter 'point' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetParameters(System.Drawing.Graphics,System.Single)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="g" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsExtension.cs" Line="19">In method 'GraphicsExtension.SetParameters(this Graphics, float)', consider providing a more meaningful name than parameter name 'g'.</Issue>
            </Message>
            <Message Id="g" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsExtension.cs" Line="19">Parameter 'g' of 'GraphicsExtension.SetParameters(this Graphics, float)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetTransform(System.Drawing.Graphics)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="g" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsExtension.cs" Line="25">In method 'GraphicsExtension.SetTransform(this Graphics)', consider providing a more meaningful name than parameter name 'g'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsExtension.cs" Line="25">In externally visible method 'GraphicsExtension.SetTransform(this Graphics)', validate parameter 'g' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="GraphicsForm" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#_editCursorSize" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'GraphicsForm._editCursorSize' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_XYViewLineCentroid" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'GraphicsForm._XYViewLineCentroid' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_XZViewLineCentroid" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'GraphicsForm._XZViewLineCentroid' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_ZYViewLineCentroid" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'GraphicsForm._ZYViewLineCentroid' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddCalculatedValuesToRespectiveVariables(System.String,System.Double,System.Double)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1263">Method 'GraphicsForm.AddCalculatedValuesToRespectiveVariables(string, double, double)' passes a literal string as parameter 'format' of a call to 'Console.WriteLine(string, object, object, object)'. Retrieve the following string(s) from a resource table instead: "Jwx:{0}; Jwy:{1}; Jwz:{2}".</Issue>
            </Message>
            <Message Id="Jwx" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1263">Correct the spelling of the unrecognized token 'Jwx' in the literal '"Jwx:{0}; Jwy:{1}; Jwz:{2}"'.</Issue>
            </Message>
            <Message Id="Jwy" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1263">Correct the spelling of the unrecognized token 'Jwy' in the literal '"Jwx:{0}; Jwy:{1}; Jwz:{2}"'.</Issue>
            </Message>
            <Message Id="Jwz" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1263">Correct the spelling of the unrecognized token 'Jwz' in the literal '"Jwx:{0}; Jwy:{1}; Jwz:{2}"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddFurthestPointVectorAndItsPerpendicularToViewObjects()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Console.WriteLine(System.String,System.Object[])" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1764">Method 'GraphicsForm.AddFurthestPointVectorAndItsPerpendicularToViewObjects()' passes a literal string as parameter 'format' of a call to 'Console.WriteLine(string, params object[])'. Retrieve the following string(s) from a resource table instead: "R vector ({0},{1},{2}) to ({3},{4},{5}) length: {6}".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddNewRealWeldLine()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Console.WriteLine(System.String,System.Object[])" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="896">Method 'GraphicsForm.AddNewRealWeldLine()' passes a literal string as parameter 'format' of a call to 'Console.WriteLine(string, params object[])'. Retrieve the following string(s) from a resource table instead: "EndPoint   -&gt; x: {0}; y: {1}; z: {2}; length entered: {3}".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="895">Method 'GraphicsForm.AddNewRealWeldLine()' passes a literal string as parameter 'format' of a call to 'Console.WriteLine(string, params object[])'. Retrieve the following string(s) from a resource table instead: "FirstPoint -&gt; x: {0}; y: {1}; z: {2}; length entered: {3}".</Issue>
            </Message>
            <Message Id="FirstPoint" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="895">Correct the spelling of the unrecognized token 'FirstPoint' in the literal '"FirstPoint -&gt; x: {0}; y: {1}; z: {2}; length entered: {3}"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AllowableForcePerInchOfWeld" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'GraphicsForm.AllowableForcePerInchOfWeld' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ALLRF" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'GraphicsForm.ALLRF' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CalculateAllowableForcePerInchOfWeld(System.Double,System.Double)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1676">The 'this' parameter (or 'Me' in Visual Basic) of 'GraphicsForm.CalculateAllowableForcePerInchOfWeld(double, double)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CalculateDistanceVerticeToCentroid(System.Int32,MyCAD.Entities.Point)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="i" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1110">Parameter 'i' of 'GraphicsForm.CalculateDistanceVerticeToCentroid(int, Point)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CalculateFactorOfSafety()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Console.WriteLine(System.String,System.Object)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1735">Method 'GraphicsForm.CalculateFactorOfSafety()' passes a literal string as parameter 'format' of a call to 'Console.WriteLine(string, object)'. Retrieve the following string(s) from a resource table instead: "FoS = {0}".</Issue>
            </Message>
            <Message Id="FoS" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1735">Correct the spelling of the unrecognized token 'FoS' in the literal '"FoS = {0}"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CalculateMomentOfInertia(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Console.WriteLine(System.String,System.Object[])" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1152">Method 'GraphicsForm.CalculateMomentOfInertia(string)' passes a literal string as parameter 'format' of a call to 'Console.WriteLine(string, params object[])'. Retrieve the following string(s) from a resource table instead: "C:{0}; I{1}{2}:{3}".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CalculateMomentOfInertiaXY()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Console.WriteLine(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1348">Method 'GraphicsForm.CalculateMomentOfInertiaXY()' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "Calculating moment of inertia and centroid... xy".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1350">Method 'GraphicsForm.CalculateMomentOfInertiaXY()' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "Calculating moment of inertia and centroid... yx".</Issue>
            </Message>
            <Message Id="xy" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1348">Correct the spelling of the unrecognized token 'xy' in the literal '"Calculating moment of inertia and centroid... xy"'.</Issue>
            </Message>
            <Message Id="yx" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1350">Correct the spelling of the unrecognized token 'yx' in the literal '"Calculating moment of inertia and centroid... yx"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CalculateMomentOfInertiaXZ()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Console.WriteLine(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1340">Method 'GraphicsForm.CalculateMomentOfInertiaXZ()' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "Calculating moment of inertia and centroid... xz".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1342">Method 'GraphicsForm.CalculateMomentOfInertiaXZ()' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "Calculating moment of inertia and centroid... zx".</Issue>
            </Message>
            <Message Id="xz" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1340">Correct the spelling of the unrecognized token 'xz' in the literal '"Calculating moment of inertia and centroid... xz"'.</Issue>
            </Message>
            <Message Id="zx" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1342">Correct the spelling of the unrecognized token 'zx' in the literal '"Calculating moment of inertia and centroid... zx"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CalculateMomentOfInertiaZY()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Console.WriteLine(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1334">Method 'GraphicsForm.CalculateMomentOfInertiaZY()' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "Calculating moment of inertia and centroid... yz".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1332">Method 'GraphicsForm.CalculateMomentOfInertiaZY()' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "Calculating moment of inertia and centroid... zy".</Issue>
            </Message>
            <Message Id="yz" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1334">Correct the spelling of the unrecognized token 'yz' in the literal '"Calculating moment of inertia and centroid... yz"'.</Issue>
            </Message>
            <Message Id="zy" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1332">Correct the spelling of the unrecognized token 'zy' in the literal '"Calculating moment of inertia and centroid... zy"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CalculatePerpendicular(MyCAD.Entities.Line)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Console.WriteLine(System.String,System.Object[])" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1782">Method 'GraphicsForm.CalculatePerpendicular(Line)' passes a literal string as parameter 'format' of a call to 'Console.WriteLine(string, params object[])'. Retrieve the following string(s) from a resource table instead: "Real Perpendicular vector ({0},{1},{2}) to ({3},{4},{5}) length: {6}".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CalculateResultantLoadByMoment()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1719">Method 'GraphicsForm.CalculateResultantLoadByMoment()' passes a literal string as parameter 'format' of a call to 'Console.WriteLine(string, object, object, object)'. Retrieve the following string(s) from a resource table instead: "Resultant Force Mx = {0}. RFy = {1}. RFz = {2}.".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1720">Method 'GraphicsForm.CalculateResultantLoadByMoment()' passes a literal string as parameter 'format' of a call to 'Console.WriteLine(string, object, object, object)'. Retrieve the following string(s) from a resource table instead: "Resultant Force My = {0}. RFx = {1}. RFz = {2}.".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1721">Method 'GraphicsForm.CalculateResultantLoadByMoment()' passes a literal string as parameter 'format' of a call to 'Console.WriteLine(string, object, object, object)'. Retrieve the following string(s) from a resource table instead: "Resultant Force Mz = {0}. RFx = {1}. RFy = {2}.".</Issue>
            </Message>
            <Message Id="System.Console.WriteLine(System.String,System.Object[])" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1729">Method 'GraphicsForm.CalculateResultantLoadByMoment()' passes a literal string as parameter 'format' of a call to 'Console.WriteLine(string, params object[])'. Retrieve the following string(s) from a resource table instead: "fx sum = {0}; fy sum = {1}; fz sum = {2}; Total force = {3}".</Issue>
            </Message>
            <Message Id="Mx" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1719">Correct the spelling of the unrecognized token 'Mx' in the literal '"Resultant Force Mx = {0}. RFy = {1}. RFz = {2}."'.</Issue>
            </Message>
            <Message Id="Mz" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1721">Correct the spelling of the unrecognized token 'Mz' in the literal '"Resultant Force Mz = {0}. RFx = {1}. RFy = {2}."'.</Issue>
            </Message>
            <Message Id="RFx" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1720">Correct the spelling of the unrecognized token 'RFx' in the literal '"Resultant Force My = {0}. RFx = {1}. RFz = {2}."'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1721">Correct the spelling of the unrecognized token 'RFx' in the literal '"Resultant Force Mz = {0}. RFx = {1}. RFy = {2}."'.</Issue>
            </Message>
            <Message Id="RFy" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1719">Correct the spelling of the unrecognized token 'RFy' in the literal '"Resultant Force Mx = {0}. RFy = {1}. RFz = {2}."'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1721">Correct the spelling of the unrecognized token 'RFy' in the literal '"Resultant Force Mz = {0}. RFx = {1}. RFy = {2}."'.</Issue>
            </Message>
            <Message Id="RFz" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1719">Correct the spelling of the unrecognized token 'RFz' in the literal '"Resultant Force Mx = {0}. RFy = {1}. RFz = {2}."'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1720">Correct the spelling of the unrecognized token 'RFz' in the literal '"Resultant Force My = {0}. RFx = {1}. RFz = {2}."'.</Issue>
            </Message>
            <Message Id="fy" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1729">Correct the spelling of the unrecognized token 'fy' in the literal '"fx sum = {0}; fy sum = {1}; fz sum = {2}; Total force = {3}"'.</Issue>
            </Message>
            <Message Id="fz" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1729">Correct the spelling of the unrecognized token 'fz' in the literal '"fx sum = {0}; fy sum = {1}; fz sum = {2}; Total force = {3}"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CalculateZ()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Console.WriteLine(System.String,System.Object)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1535">Method 'GraphicsForm.CalculateZ()' passes a literal string as parameter 'format' of a call to 'Console.WriteLine(string, object)'. Retrieve the following string(s) from a resource table instead: "Weld Perimeter: {0}".</Issue>
            </Message>
            <Message Id="System.Console.WriteLine(System.String,System.Object,System.Object)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1532">Method 'GraphicsForm.CalculateZ()' passes a literal string as parameter 'format' of a call to 'Console.WriteLine(string, object, object)'. Retrieve the following string(s) from a resource table instead: "Z1: {0}; Z2: {1}".</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1533">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'GraphicsForm.CalculateZ()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1534">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'GraphicsForm.CalculateZ()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ChooseColoForObject(System.Drawing.Pen,System.Int32,MyCAD.Entities.EntityObject)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1067">In method 'GraphicsForm.ChooseColoForObject(Pen, int, EntityObject)', call System.IDisposable.Dispose on object '_nPen' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1066">'entities', a parameter, is cast to type 'Line' multiple times in method 'GraphicsForm.ChooseColoForObject(Pen, int, EntityObject)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1061">'entities', a parameter, is cast to type 'Point' multiple times in method 'GraphicsForm.ChooseColoForObject(Pen, int, EntityObject)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1059">The 'this' parameter (or 'Me' in Visual Basic) of 'GraphicsForm.ChooseColoForObject(Pen, int, EntityObject)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="i" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1059">Parameter 'i' of 'GraphicsForm.ChooseColoForObject(Pen, int, EntityObject)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Clear_btn_click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="441">Method 'GraphicsForm.Clear_btn_click(object, EventArgs)' passes a literal string as parameter 'caption' of a call to 'MessageBox.Show(string, string, MessageBoxButtons, MessageBoxIcon)'. Retrieve the following string(s) from a resource table instead: "Warning".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="441">Method 'GraphicsForm.Clear_btn_click(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string, string, MessageBoxButtons, MessageBoxIcon)'. Retrieve the following string(s) from a resource table instead: "Are you sure you want to clear all objects in drawing canvas and data results?".</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="441">Change 'GraphicsForm.Clear_btn_click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateVerticesList()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Console.WriteLine(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="672">Method 'GraphicsForm.CreateVerticesList()' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "Create Vertices List...".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CursorRectangle(MyCAD.Vector3)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="233">The 'this' parameter (or 'Me' in Visual Basic) of 'GraphicsForm.CursorRectangle(Vector3)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#deleteLine_btn_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1565">Method 'GraphicsForm.deleteLine_btn_Click(object, EventArgs)' passes a literal string as parameter 'caption' of a call to 'MessageBox.Show(string, string, MessageBoxButtons, MessageBoxIcon)'. Retrieve the following string(s) from a resource table instead: "Warning".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1565">Method 'GraphicsForm.deleteLine_btn_Click(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string, string, MessageBoxButtons, MessageBoxIcon)'. Retrieve the following string(s) from a resource table instead: "Are you sure you want to delete the selected object(s)?".</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1565">Change 'GraphicsForm.deleteLine_btn_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DisplayObjectsOnProjectionsView(System.Windows.Forms.PaintEventArgs,System.Drawing.Pen&amp;,System.Collections.Generic.List`1&lt;MyCAD.Entities.EntityObject&gt;&amp;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="989">The 'this' parameter (or 'Me' in Visual Basic) of 'GraphicsForm.DisplayObjectsOnProjectionsView(PaintEventArgs, ref Pen, ref List&lt;EntityObject&gt;)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DistanceEachVertexToCentroid()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1104">Method 'GraphicsForm.DistanceEachVertexToCentroid()' passes a literal string as parameter 'format' of a call to 'Console.WriteLine(string, object, object, object)'. Retrieve the following string(s) from a resource table instead: ".... Maximum components: ({0},{1},{2})".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawingCanvasObjects" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="14">Change 'GraphicsForm.DrawingCanvasObjects' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="14">Change 'List&lt;EntityObject&gt;' in 'GraphicsForm.DrawingCanvasObjects' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#extline" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'GraphicsForm.extline' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FirstAndSecondMomentOfLineCalculation(System.Double,System.Double,System.Double&amp;,System.Double&amp;,System.Double,System.Double&amp;,System.Double&amp;,System.Double&amp;,System.Double&amp;,System.Double&amp;,MyCAD.Entities.Line)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="line" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1218">Parameter 'line' of 'GraphicsForm.FirstAndSecondMomentOfLineCalculation(double, double, out double, out double, double, ref double, ref double, ref double, ref double, ref double, Line)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FoS" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'GraphicsForm.FoS' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Fo" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Fo' in member name 'GraphicsForm.FoS' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Fx" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'GraphicsForm.Fx' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Fy" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'GraphicsForm.Fy' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Fy" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Fy' in member name 'GraphicsForm.Fy' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Fz" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'GraphicsForm.Fz' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Fz" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Fz' in member name 'GraphicsForm.Fz' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMidPoint(MyCAD.Vector3,MyCAD.Vector3)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1483">The 'this' parameter (or 'Me' in Visual Basic) of 'GraphicsForm.GetMidPoint(Vector3, Vector3)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPerpendicularUnitVector(MyCAD.Vector3)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1790">The 'this' parameter (or 'Me' in Visual Basic) of 'GraphicsForm.GetPerpendicularUnitVector(Vector3)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetWeldPerimeter(System.Collections.Generic.List`1&lt;MyCAD.Entities.Line&gt;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1825">The 'this' parameter (or 'Me' in Visual Basic) of 'GraphicsForm.GetWeldPerimeter(List&lt;Line&gt;)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HighlightLineBehindMouse(System.Windows.Forms.PaintEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1080">In method 'GraphicsForm.HighlightLineBehindMouse(PaintEventArgs)', call System.IDisposable.Dispose on object 'new Pen(Color.Blue, (0.5 / this._scaleFactor))' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1079">In method 'GraphicsForm.HighlightLineBehindMouse(PaintEventArgs)', call System.IDisposable.Dispose on object 'new Pen(Color.FromArgb(128, Color.LightBlue), (1.5 / this._scaleFactor))' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="544">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "0.0".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="577">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "0.0".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="588">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "0.0".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="599">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "0.0".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="610">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "0.0".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="665">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "0.0".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="712">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "0.0".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="724">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "0.0".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="736">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "0.0".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="772">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "0.0".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="784">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "0.0".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="621">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Cx (in):".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="632">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Cy (in):".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="555">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Cz (in):".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="860">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Form1".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="376">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Isometric View - Drawing Canvas".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="643">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Ixx (in):".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="654">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Iyy (in):".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="566">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Izz (in):".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="676">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Jwx:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="688">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Jwy:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="700">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Jwz:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="798">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Reference".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="388">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "XY View".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="401">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "XZ View".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="412">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "YZ View".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="748">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Z1:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="760">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Z2:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="189">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "ribbon1".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="350">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "statusStrip1".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.RibbonItem.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="335">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'RibbonItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Calculate".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="289">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'RibbonItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Clear all".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="279">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'RibbonItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Delete line(s)".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="834">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'RibbonItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Delete".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="842">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'RibbonItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Delete".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="218">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'RibbonItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Draw line".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="326">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'RibbonItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Input values".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="229">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'RibbonItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Move".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="249">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'RibbonItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Select \'x\' axis".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="259">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'RibbonItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Select \'y\' axis".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="269">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'RibbonItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Select \'z\' axis".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="315">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'RibbonItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Set material".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="239">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'RibbonItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Unselect axis".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.RibbonItem.set_ToolTip(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="290">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'RibbonItem.ToolTip.set(string)'. Retrieve the following string(s) from a resource table instead: "Clear all in canvases.".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="280">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'RibbonItem.ToolTip.set(string)'. Retrieve the following string(s) from a resource table instead: "Deletes selected lines.".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="219">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'RibbonItem.ToolTip.set(string)'. Retrieve the following string(s) from a resource table instead: "Draw a line on canvas.".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="240">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'RibbonItem.ToolTip.set(string)'. Retrieve the following string(s) from a resource table instead: "Equivalent to right clicking on canvas -&gt; Cancel.".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="250">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'RibbonItem.ToolTip.set(string)'. Retrieve the following string(s) from a resource table instead: "Equivalent to right clicking on canvas -&gt; Draw X.".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="260">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'RibbonItem.ToolTip.set(string)'. Retrieve the following string(s) from a resource table instead: "Equivalent to right clicking on canvas -&gt; Draw Y.".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="270">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'RibbonItem.ToolTip.set(string)'. Retrieve the following string(s) from a resource table instead: "Equivalent to right clicking on canvas -&gt; Draw Z.".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="230">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'RibbonItem.ToolTip.set(string)'. Retrieve the following string(s) from a resource table instead: "To continue drawing but from other point in the space.".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.RibbonTab.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="297">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'RibbonTab.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Calculate".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="195">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'RibbonTab.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Drawing".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.ToolStripItem.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="122">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Cancel".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="360">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Cursor coordinates: 0.000, 0.000, 0.000".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="129">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Draw X".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="136">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Draw Y".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="143">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Draw Z".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="366">Method 'GraphicsForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Length of line: 0.00".</Issue>
            </Message>
            <Message Id="Cx" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="621">Correct the spelling of the unrecognized token 'Cx' in the literal '"Cx (in):"'.</Issue>
            </Message>
            <Message Id="Cz" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="555">Correct the spelling of the unrecognized token 'Cz' in the literal '"Cz (in):"'.</Issue>
            </Message>
            <Message Id="Ixx" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="643">Correct the spelling of the unrecognized token 'Ixx' in the literal '"Ixx (in):"'.</Issue>
            </Message>
            <Message Id="Iyy" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="654">Correct the spelling of the unrecognized token 'Iyy' in the literal '"Iyy (in):"'.</Issue>
            </Message>
            <Message Id="Izz" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="566">Correct the spelling of the unrecognized token 'Izz' in the literal '"Izz (in):"'.</Issue>
            </Message>
            <Message Id="Jwx" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="676">Correct the spelling of the unrecognized token 'Jwx' in the literal '"Jwx:"'.</Issue>
            </Message>
            <Message Id="Jwy" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="688">Correct the spelling of the unrecognized token 'Jwy' in the literal '"Jwy:"'.</Issue>
            </Message>
            <Message Id="Jwz" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.Designer.cs" Line="700">Correct the spelling of the unrecognized token 'Jwz' in the literal '"Jwz:"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#instance" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'GraphicsForm.instance' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Map(System.Double,System.Double,System.Double,System.Double,System.Double)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1391">The 'this' parameter (or 'Me' in Visual Basic) of 'GraphicsForm.Map(double, double, double, double, double)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Mx" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'GraphicsForm.Mx' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Mx" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Mx' in member name 'GraphicsForm.Mx' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#My" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'GraphicsForm.My' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Mz" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'GraphicsForm.Mz' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Mz" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Mz' in member name 'GraphicsForm.Mz' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ParentMaterialThickness" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'GraphicsForm.ParentMaterialThickness' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PlaneDetection()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Console.WriteLine(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="625">Method 'GraphicsForm.PlaneDetection()' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "....Plane...".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="648">Method 'GraphicsForm.PlaneDetection()' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "1D-x".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="649">Method 'GraphicsForm.PlaneDetection()' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "1D-y".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="650">Method 'GraphicsForm.PlaneDetection()' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "1D-z".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="636">Method 'GraphicsForm.PlaneDetection()' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "2D-xy plane".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="641">Method 'GraphicsForm.PlaneDetection()' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "2D-xz plane".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="646">Method 'GraphicsForm.PlaneDetection()' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "2D-zy plane".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="631">Method 'GraphicsForm.PlaneDetection()' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "3D".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PrintInputValues()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Console.WriteLine(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="715">Method 'GraphicsForm.PrintInputValues()' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "\n\r...........Input values.........".</Issue>
            </Message>
            <Message Id="System.Console.WriteLine(System.String,System.Object)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="720">Method 'GraphicsForm.PrintInputValues()' passes a literal string as parameter 'format' of a call to 'Console.WriteLine(string, object)'. Retrieve the following string(s) from a resource table instead: "Allowable Force Per Inch Of Weld: {0}".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="719">Method 'GraphicsForm.PrintInputValues()' passes a literal string as parameter 'format' of a call to 'Console.WriteLine(string, object)'. Retrieve the following string(s) from a resource table instead: "Tensile su from selection: {0}".</Issue>
            </Message>
            <Message Id="System.Console.WriteLine(System.String,System.Object,System.Object)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="718">Method 'GraphicsForm.PrintInputValues()' passes a literal string as parameter 'format' of a call to 'Console.WriteLine(string, object, object)'. Retrieve the following string(s) from a resource table instead: "Leg: {0}; W: {1};".</Issue>
            </Message>
            <Message Id="System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="716">Method 'GraphicsForm.PrintInputValues()' passes a literal string as parameter 'format' of a call to 'Console.WriteLine(string, object, object, object)'. Retrieve the following string(s) from a resource table instead: "Fx: {0}; Fy: {1}; Fz: {2}".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="717">Method 'GraphicsForm.PrintInputValues()' passes a literal string as parameter 'format' of a call to 'Console.WriteLine(string, object, object, object)'. Retrieve the following string(s) from a resource table instead: "Mx: {0}; My: {1}; Mz: {2}".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="721">Method 'GraphicsForm.PrintInputValues()' passes a literal string as parameter 'format' of a call to 'Console.WriteLine(string, object, object, object)'. Retrieve the following string(s) from a resource table instead: "aFx: {0}; aFy: {1}; aFz: {2}".</Issue>
            </Message>
            <Message Id="Fy" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="716">Correct the spelling of the unrecognized token 'Fy' in the literal '"Fx: {0}; Fy: {1}; Fz: {2}"'.</Issue>
            </Message>
            <Message Id="Fz" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="716">Correct the spelling of the unrecognized token 'Fz' in the literal '"Fx: {0}; Fy: {1}; Fz: {2}"'.</Issue>
            </Message>
            <Message Id="Mx" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="717">Correct the spelling of the unrecognized token 'Mx' in the literal '"Mx: {0}; My: {1}; Mz: {2}"'.</Issue>
            </Message>
            <Message Id="Mz" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="717">Correct the spelling of the unrecognized token 'Mz' in the literal '"Mx: {0}; My: {1}; Mz: {2}"'.</Issue>
            </Message>
            <Message Id="aFx" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="721">Correct the spelling of the unrecognized token 'aFx' in the literal '"aFx: {0}; aFy: {1}; aFz: {2}"'.</Issue>
            </Message>
            <Message Id="aFy" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="721">Correct the spelling of the unrecognized token 'aFy' in the literal '"aFx: {0}; aFy: {1}; aFz: {2}"'.</Issue>
            </Message>
            <Message Id="aFz" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="721">Correct the spelling of the unrecognized token 'aFz' in the literal '"aFx: {0}; aFy: {1}; aFz: {2}"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PrintLinesCoordinates()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Console.WriteLine(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="587">Method 'GraphicsForm.PrintLinesCoordinates()' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "Printing screen lines coordinates...".</Issue>
            </Message>
            <Message Id="System.Console.WriteLine(System.String,System.Object[])" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="595">Method 'GraphicsForm.PrintLinesCoordinates()' passes a literal string as parameter 'format' of a call to 'Console.WriteLine(string, params object[])'. Retrieve the following string(s) from a resource table instead: "x: {0}; y: {1}; z: {2}; length: {3}".</Issue>
            </Message>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="594">'ent', a variable, is cast to type 'Line' multiple times in method 'GraphicsForm.PrintLinesCoordinates()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PrintRealLinesCoordinates()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Console.WriteLine(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="605">Method 'GraphicsForm.PrintRealLinesCoordinates()' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "Printing \'real\' lines coordinates...".</Issue>
            </Message>
            <Message Id="System.Console.WriteLine(System.String,System.Object[])" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="611">Method 'GraphicsForm.PrintRealLinesCoordinates()' passes a literal string as parameter 'format' of a call to 'Console.WriteLine(string, params object[])'. Retrieve the following string(s) from a resource table instead: "StartP:({0},{1},{2}); EndP:({3},{4},{5}); length: {6}; centroid: ({7},{8},{9})".</Issue>
            </Message>
            <Message Id="EndP" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="611">Correct the spelling of the unrecognized token 'EndP' in the literal '"StartP:({0},{1},{2}); EndP:({3},{4},{5}); length: {6}; centroid: ({7},{8},{9})"'.</Issue>
            </Message>
            <Message Id="StartP" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="611">Correct the spelling of the unrecognized token 'StartP' in the literal '"StartP:({0},{1},{2}); EndP:({3},{4},{5}); length: {6}; centroid: ({7},{8},{9})"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PrintVertices()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Console.WriteLine(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="699">Method 'GraphicsForm.PrintVertices()' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "Printing \'real\' vertexes coordinates...".</Issue>
            </Message>
            <Message Id="System.Console.WriteLine(System.String,System.Object[])" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="705">Method 'GraphicsForm.PrintVertices()' passes a literal string as parameter 'format' of a call to 'Console.WriteLine(string, params object[])'. Retrieve the following string(s) from a resource table instead: "Vertex {0}: ({1}, {2}, {3}).".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#QuadrantSelection(System.Int32,MyCAD.Entities.Point)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Console.WriteLine(System.String,System.Object[])" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1883">Method 'GraphicsForm.QuadrantSelection(int, Point)' passes a literal string as parameter 'format' of a call to 'Console.WriteLine(string, params object[])'. Retrieve the following string(s) from a resource table instead: "Vertice({0}): ({1},{2},{3}) in quadrant 1(+i,+j)".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1888">Method 'GraphicsForm.QuadrantSelection(int, Point)' passes a literal string as parameter 'format' of a call to 'Console.WriteLine(string, params object[])'. Retrieve the following string(s) from a resource table instead: "Vertice({0}): ({1},{2},{3}) in quadrant 2(-i,+j)".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1892">Method 'GraphicsForm.QuadrantSelection(int, Point)' passes a literal string as parameter 'format' of a call to 'Console.WriteLine(string, params object[])'. Retrieve the following string(s) from a resource table instead: "Vertice({0}): ({1},{2},{3}) in quadrant 3(-i,-j)".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1896">Method 'GraphicsForm.QuadrantSelection(int, Point)' passes a literal string as parameter 'format' of a call to 'Console.WriteLine(string, params object[])'. Retrieve the following string(s) from a resource table instead: "Vertice({0}): ({1},{2},{3}) in quadrant 4(+i,-j)".</Issue>
            </Message>
            <Message Id="Vertice" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1883">Correct the spelling of the unrecognized token 'Vertice' in the literal '"Vertice({0}): ({1},{2},{3}) in quadrant 1(+i,+j)"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1888">Correct the spelling of the unrecognized token 'Vertice' in the literal '"Vertice({0}): ({1},{2},{3}) in quadrant 2(-i,+j)"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1892">Correct the spelling of the unrecognized token 'Vertice' in the literal '"Vertice({0}): ({1},{2},{3}) in quadrant 3(-i,-j)"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1896">Correct the spelling of the unrecognized token 'Vertice' in the literal '"Vertice({0}): ({1},{2},{3}) in quadrant 4(+i,-j)"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RealWeldLines" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="13">Change 'GraphicsForm.RealWeldLines' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="13">Change 'List&lt;Line&gt;' in 'GraphicsForm.RealWeldLines' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RemoveCentroid(System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Console.WriteLine(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1638">Method 'GraphicsForm.RemoveCentroid(int)' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "Centroid removed".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RemoveVector(System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Console.WriteLine(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="1623">Method 'GraphicsForm.RemoveVector(int)' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "Vector removed".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ResultantForce" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'GraphicsForm.ResultantForce' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RFi" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'GraphicsForm.RFi' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RFj" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'GraphicsForm.RFj' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RFk" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'GraphicsForm.RFk' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RFx" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'GraphicsForm.RFx' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RFy" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'GraphicsForm.RFy' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RFz" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'GraphicsForm.RFz' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetActiveCursor(System.Int32,System.Single)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="223">In method 'GraphicsForm.SetActiveCursor(int, float)', call System.IDisposable.Dispose on object 'cursor' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetDrawingPopup()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ToolStripMenuItem.#ctor(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="470">Method 'GraphicsForm.SetDrawingPopup()' passes a literal string as parameter 'text' of a call to 'ToolStripMenuItem.ToolStripMenuItem(string)'. Retrieve the following string(s) from a resource table instead: "Cancel".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="458">Method 'GraphicsForm.SetDrawingPopup()' passes a literal string as parameter 'text' of a call to 'ToolStripMenuItem.ToolStripMenuItem(string)'. Retrieve the following string(s) from a resource table instead: "Draw over x".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="462">Method 'GraphicsForm.SetDrawingPopup()' passes a literal string as parameter 'text' of a call to 'ToolStripMenuItem.ToolStripMenuItem(string)'. Retrieve the following string(s) from a resource table instead: "Draw over y".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="466">Method 'GraphicsForm.SetDrawingPopup()' passes a literal string as parameter 'text' of a call to 'ToolStripMenuItem.ToolStripMenuItem(string)'. Retrieve the following string(s) from a resource table instead: "Draw over z".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetInputValues_btn_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="575">In method 'GraphicsForm.SetInputValues_btn_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'new Input_Values()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetModifyPopup()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ToolStripMenuItem.#ctor(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="531">Method 'GraphicsForm.SetModifyPopup()' passes a literal string as parameter 'text' of a call to 'ToolStripMenuItem.ToolStripMenuItem(string)'. Retrieve the following string(s) from a resource table instead: "Cancel".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="527">Method 'GraphicsForm.SetModifyPopup()' passes a literal string as parameter 'text' of a call to 'ToolStripMenuItem.ToolStripMenuItem(string)'. Retrieve the following string(s) from a resource table instead: "Enter".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetMovingPopup()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ToolStripMenuItem.#ctor(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="491">Method 'GraphicsForm.SetMovingPopup()' passes a literal string as parameter 'text' of a call to 'ToolStripMenuItem.ToolStripMenuItem(string)'. Retrieve the following string(s) from a resource table instead: "Cancel".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="479">Method 'GraphicsForm.SetMovingPopup()' passes a literal string as parameter 'text' of a call to 'ToolStripMenuItem.ToolStripMenuItem(string)'. Retrieve the following string(s) from a resource table instead: "Move over x".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="483">Method 'GraphicsForm.SetMovingPopup()' passes a literal string as parameter 'text' of a call to 'ToolStripMenuItem.ToolStripMenuItem(string)'. Retrieve the following string(s) from a resource table instead: "Move over y".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="487">Method 'GraphicsForm.SetMovingPopup()' passes a literal string as parameter 'text' of a call to 'ToolStripMenuItem.ToolStripMenuItem(string)'. Retrieve the following string(s) from a resource table instead: "Move over z".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShowLinesListForm()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="309">In method 'GraphicsForm.ShowLinesListForm()', call System.IDisposable.Dispose on object 'new LinesListForm()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShowVerticesListForm()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="316">In method 'GraphicsForm.ShowVerticesListForm()', call System.IDisposable.Dispose on object 'new VerticesListForm()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TensileStrengthUltimate" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'GraphicsForm.TensileStrengthUltimate' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateCurrentPosition(System.Windows.Forms.MouseEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ToolStripItem.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="745">Method 'GraphicsForm.UpdateCurrentPosition(MouseEventArgs)' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Cursor coordinates: , , ".</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="745">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'GraphicsForm.UpdateCurrentPosition(MouseEventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateLineLengthTextToolStrip()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ToolStripItem.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="764">Method 'GraphicsForm.UpdateLineLengthTextToolStrip()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Length of line: ,  in.".</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="764">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'GraphicsForm.UpdateLineLengthTextToolStrip()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateTextBoxes()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="387">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'GraphicsForm.UpdateTextBoxes()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="388">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'GraphicsForm.UpdateTextBoxes()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="389">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'GraphicsForm.UpdateTextBoxes()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="390">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'GraphicsForm.UpdateTextBoxes()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="391">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'GraphicsForm.UpdateTextBoxes()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="392">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'GraphicsForm.UpdateTextBoxes()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="393">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'GraphicsForm.UpdateTextBoxes()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="394">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'GraphicsForm.UpdateTextBoxes()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="395">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'GraphicsForm.UpdateTextBoxes()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="396">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'GraphicsForm.UpdateTextBoxes()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="GraphicsForm.cs" Line="397">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'GraphicsForm.UpdateTextBoxes()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WeldLegSize" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'GraphicsForm.WeldLegSize' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MainForm" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AddLineToRealWeldLines(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Convert.ToDouble(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MainForm.cs" Line="246">Because the behavior of 'Convert.ToDouble(string)' could vary based on the current user's locale settings, replace this call in 'MainForm.AddLineToRealWeldLines(string)' with a call to 'Convert.ToDouble(string, IFormatProvider)'. If the result of 'Convert.ToDouble(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MainForm.cs" Line="247">Because the behavior of 'Convert.ToDouble(string)' could vary based on the current user's locale settings, replace this call in 'MainForm.AddLineToRealWeldLines(string)' with a call to 'Convert.ToDouble(string, IFormatProvider)'. If the result of 'Convert.ToDouble(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MainForm.cs" Line="248">Because the behavior of 'Convert.ToDouble(string)' could vary based on the current user's locale settings, replace this call in 'MainForm.AddLineToRealWeldLines(string)' with a call to 'Convert.ToDouble(string, IFormatProvider)'. If the result of 'Convert.ToDouble(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MainForm.cs" Line="249">Because the behavior of 'Convert.ToDouble(string)' could vary based on the current user's locale settings, replace this call in 'MainForm.AddLineToRealWeldLines(string)' with a call to 'Convert.ToDouble(string, IFormatProvider)'. If the result of 'Convert.ToDouble(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MainForm.cs" Line="250">Because the behavior of 'Convert.ToDouble(string)' could vary based on the current user's locale settings, replace this call in 'MainForm.AddLineToRealWeldLines(string)' with a call to 'Convert.ToDouble(string, IFormatProvider)'. If the result of 'Convert.ToDouble(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MainForm.cs" Line="251">Because the behavior of 'Convert.ToDouble(string)' could vary based on the current user's locale settings, replace this call in 'MainForm.AddLineToRealWeldLines(string)' with a call to 'Convert.ToDouble(string, IFormatProvider)'. If the result of 'Convert.ToDouble(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddLineToScreenObjects(System.String[])" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Convert.ToDouble(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MainForm.cs" Line="220">Because the behavior of 'Convert.ToDouble(string)' could vary based on the current user's locale settings, replace this call in 'MainForm.AddLineToScreenObjects(string[])' with a call to 'Convert.ToDouble(string, IFormatProvider)'. If the result of 'Convert.ToDouble(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MainForm.cs" Line="221">Because the behavior of 'Convert.ToDouble(string)' could vary based on the current user's locale settings, replace this call in 'MainForm.AddLineToScreenObjects(string[])' with a call to 'Convert.ToDouble(string, IFormatProvider)'. If the result of 'Convert.ToDouble(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MainForm.cs" Line="222">Because the behavior of 'Convert.ToDouble(string)' could vary based on the current user's locale settings, replace this call in 'MainForm.AddLineToScreenObjects(string[])' with a call to 'Convert.ToDouble(string, IFormatProvider)'. If the result of 'Convert.ToDouble(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MainForm.cs" Line="223">Because the behavior of 'Convert.ToDouble(string)' could vary based on the current user's locale settings, replace this call in 'MainForm.AddLineToScreenObjects(string[])' with a call to 'Convert.ToDouble(string, IFormatProvider)'. If the result of 'Convert.ToDouble(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MainForm.cs" Line="224">Because the behavior of 'Convert.ToDouble(string)' could vary based on the current user's locale settings, replace this call in 'MainForm.AddLineToScreenObjects(string[])' with a call to 'Convert.ToDouble(string, IFormatProvider)'. If the result of 'Convert.ToDouble(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MainForm.cs" Line="225">Because the behavior of 'Convert.ToDouble(string)' could vary based on the current user's locale settings, replace this call in 'MainForm.AddLineToScreenObjects(string[])' with a call to 'Convert.ToDouble(string, IFormatProvider)'. If the result of 'Convert.ToDouble(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddObjectsCoordinatesToOutputText(System.Collections.Generic.List`1&lt;System.String&gt;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MainForm.cs" Line="87">'entity', a variable, is cast to type 'Line' multiple times in method 'MainForm.AddObjectsCoordinatesToOutputText(List&lt;string&gt;)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MainForm.cs" Line="81">'entity', a variable, is cast to type 'Point' multiple times in method 'MainForm.AddObjectsCoordinatesToOutputText(List&lt;string&gt;)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddOriginPointToOutputText(System.Collections.Generic.List`1&lt;System.String&gt;,System.Int32,MyCAD.Entities.Point)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Convert.ToString(System.Double)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MainForm.cs" Line="111">Because the behavior of 'Convert.ToString(double)' could vary based on the current user's locale settings, replace this call in 'MainForm.AddOriginPointToOutputText(List&lt;string&gt;, int, Point)' with a call to 'Convert.ToString(double, IFormatProvider)'. If the result of 'Convert.ToString(double, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MainForm.cs" Line="112">Because the behavior of 'Convert.ToString(double)' could vary based on the current user's locale settings, replace this call in 'MainForm.AddOriginPointToOutputText(List&lt;string&gt;, int, Point)' with a call to 'Convert.ToString(double, IFormatProvider)'. If the result of 'Convert.ToString(double, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MainForm.cs" Line="113">Because the behavior of 'Convert.ToString(double)' could vary based on the current user's locale settings, replace this call in 'MainForm.AddOriginPointToOutputText(List&lt;string&gt;, int, Point)' with a call to 'Convert.ToString(double, IFormatProvider)'. If the result of 'Convert.ToString(double, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Int32)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MainForm.cs" Line="110">Because the behavior of 'Convert.ToString(int)' could vary based on the current user's locale settings, replace this call in 'MainForm.AddOriginPointToOutputText(List&lt;string&gt;, int, Point)' with a call to 'Convert.ToString(int, IFormatProvider)'. If the result of 'Convert.ToString(int, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddOriginPointToScreenObjects(System.String[])" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Convert.ToDouble(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MainForm.cs" Line="234">Because the behavior of 'Convert.ToDouble(string)' could vary based on the current user's locale settings, replace this call in 'MainForm.AddOriginPointToScreenObjects(string[])' with a call to 'Convert.ToDouble(string, IFormatProvider)'. If the result of 'Convert.ToDouble(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MainForm.cs" Line="235">Because the behavior of 'Convert.ToDouble(string)' could vary based on the current user's locale settings, replace this call in 'MainForm.AddOriginPointToScreenObjects(string[])' with a call to 'Convert.ToDouble(string, IFormatProvider)'. If the result of 'Convert.ToDouble(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MainForm.cs" Line="236">Because the behavior of 'Convert.ToDouble(string)' could vary based on the current user's locale settings, replace this call in 'MainForm.AddOriginPointToScreenObjects(string[])' with a call to 'Convert.ToDouble(string, IFormatProvider)'. If the result of 'Convert.ToDouble(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddRealWeldCoordinatesToOutputText(System.Collections.Generic.List`1&lt;System.String&gt;,System.Int32,MyCAD.Entities.Line)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Convert.ToString(System.Double)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MainForm.cs" Line="120">Because the behavior of 'Convert.ToString(double)' could vary based on the current user's locale settings, replace this call in 'MainForm.AddRealWeldCoordinatesToOutputText(List&lt;string&gt;, int, Line)' with a call to 'Convert.ToString(double, IFormatProvider)'. If the result of 'Convert.ToString(double, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MainForm.cs" Line="121">Because the behavior of 'Convert.ToString(double)' could vary based on the current user's locale settings, replace this call in 'MainForm.AddRealWeldCoordinatesToOutputText(List&lt;string&gt;, int, Line)' with a call to 'Convert.ToString(double, IFormatProvider)'. If the result of 'Convert.ToString(double, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MainForm.cs" Line="122">Because the behavior of 'Convert.ToString(double)' could vary based on the current user's locale settings, replace this call in 'MainForm.AddRealWeldCoordinatesToOutputText(List&lt;string&gt;, int, Line)' with a call to 'Convert.ToString(double, IFormatProvider)'. If the result of 'Convert.ToString(double, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MainForm.cs" Line="123">Because the behavior of 'Convert.ToString(double)' could vary based on the current user's locale settings, replace this call in 'MainForm.AddRealWeldCoordinatesToOutputText(List&lt;string&gt;, int, Line)' with a call to 'Convert.ToString(double, IFormatProvider)'. If the result of 'Convert.ToString(double, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MainForm.cs" Line="124">Because the behavior of 'Convert.ToString(double)' could vary based on the current user's locale settings, replace this call in 'MainForm.AddRealWeldCoordinatesToOutputText(List&lt;string&gt;, int, Line)' with a call to 'Convert.ToString(double, IFormatProvider)'. If the result of 'Convert.ToString(double, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MainForm.cs" Line="125">Because the behavior of 'Convert.ToString(double)' could vary based on the current user's locale settings, replace this call in 'MainForm.AddRealWeldCoordinatesToOutputText(List&lt;string&gt;, int, Line)' with a call to 'Convert.ToString(double, IFormatProvider)'. If the result of 'Convert.ToString(double, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Int32)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MainForm.cs" Line="119">Because the behavior of 'Convert.ToString(int)' could vary based on the current user's locale settings, replace this call in 'MainForm.AddRealWeldCoordinatesToOutputText(List&lt;string&gt;, int, Line)' with a call to 'Convert.ToString(int, IFormatProvider)'. If the result of 'Convert.ToString(int, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddScreenLineToOutputText(System.Collections.Generic.List`1&lt;System.String&gt;,System.Int32,MyCAD.Entities.Line)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Convert.ToString(System.Double)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MainForm.cs" Line="99">Because the behavior of 'Convert.ToString(double)' could vary based on the current user's locale settings, replace this call in 'MainForm.AddScreenLineToOutputText(List&lt;string&gt;, int, Line)' with a call to 'Convert.ToString(double, IFormatProvider)'. If the result of 'Convert.ToString(double, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MainForm.cs" Line="100">Because the behavior of 'Convert.ToString(double)' could vary based on the current user's locale settings, replace this call in 'MainForm.AddScreenLineToOutputText(List&lt;string&gt;, int, Line)' with a call to 'Convert.ToString(double, IFormatProvider)'. If the result of 'Convert.ToString(double, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MainForm.cs" Line="101">Because the behavior of 'Convert.ToString(double)' could vary based on the current user's locale settings, replace this call in 'MainForm.AddScreenLineToOutputText(List&lt;string&gt;, int, Line)' with a call to 'Convert.ToString(double, IFormatProvider)'. If the result of 'Convert.ToString(double, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MainForm.cs" Line="102">Because the behavior of 'Convert.ToString(double)' could vary based on the current user's locale settings, replace this call in 'MainForm.AddScreenLineToOutputText(List&lt;string&gt;, int, Line)' with a call to 'Convert.ToString(double, IFormatProvider)'. If the result of 'Convert.ToString(double, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MainForm.cs" Line="103">Because the behavior of 'Convert.ToString(double)' could vary based on the current user's locale settings, replace this call in 'MainForm.AddScreenLineToOutputText(List&lt;string&gt;, int, Line)' with a call to 'Convert.ToString(double, IFormatProvider)'. If the result of 'Convert.ToString(double, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MainForm.cs" Line="104">Because the behavior of 'Convert.ToString(double)' could vary based on the current user's locale settings, replace this call in 'MainForm.AddScreenLineToOutputText(List&lt;string&gt;, int, Line)' with a call to 'Convert.ToString(double, IFormatProvider)'. If the result of 'Convert.ToString(double, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Int32)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MainForm.cs" Line="98">Because the behavior of 'Convert.ToString(int)' could vary based on the current user's locale settings, replace this call in 'MainForm.AddScreenLineToOutputText(List&lt;string&gt;, int, Line)' with a call to 'Convert.ToString(int, IFormatProvider)'. If the result of 'Convert.ToString(int, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateNewWindow()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ToolStripItem.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MainForm.cs" Line="29">Method 'MainForm.CreateNewWindow()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Windows".</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MainForm.cs" Line="38">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'MainForm.CreateNewWindow()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HasOnlyNumbers(System.String[])" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MainForm.cs" Line="177">The 'this' parameter (or 'Me' in Visual Basic) of 'MainForm.HasOnlyNumbers(string[])' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MainForm.Designer.cs" Line="114">Method 'MainForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Weld Analysis Calculator".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MainForm.Designer.cs" Line="52">Method 'MainForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "menuStrip1".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.FileDialog.set_Filter(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MainForm.Designer.cs" Line="97">Method 'MainForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'FileDialog.Filter.set(string)'. Retrieve the following string(s) from a resource table instead: "Text Files (*.txt)|*.txt".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MainForm.Designer.cs" Line="101">Method 'MainForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'FileDialog.Filter.set(string)'. Retrieve the following string(s) from a resource table instead: "Text Files (*.txt)|*.txt".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.ToolStripItem.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MainForm.Designer.cs" Line="92">Method 'MainForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Exit".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MainForm.Designer.cs" Line="63">Method 'MainForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "File".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MainForm.Designer.cs" Line="70">Method 'MainForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "New".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MainForm.Designer.cs" Line="77">Method 'MainForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Open".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MainForm.Designer.cs" Line="84">Method 'MainForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Save".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#openBtn_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MainForm.cs" Line="148">Method 'MainForm.openBtn_Click(object, EventArgs)' passes a literal string as parameter 'caption' of a call to 'MessageBox.Show(string, string, MessageBoxButtons, MessageBoxIcon)'. Retrieve the following string(s) from a resource table instead: "Warning".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MainForm.cs" Line="148">Method 'MainForm.openBtn_Click(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string, string, MessageBoxButtons, MessageBoxIcon)'. Retrieve the following string(s) from a resource table instead: "Can not open this file.".</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MainForm.cs" Line="148">Change 'MainForm.openBtn_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MaterialsDBDataSet" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'MaterialsDBDataSet'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="29">'MaterialsDBDataSet.MaterialsDBDataSet()' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;MaterialsDBDataSet..ctor()&#xD;&#xA;DataSet.BeginInit():Void&#xD;&#xA;MaterialsDBDataSet.InitClass():Void&#xD;&#xA;DataSet.set_DataSetName(String):Void&#xD;&#xA;DataSet.set_Prefix(String):Void&#xD;&#xA;DataSet.set_Namespace(String):Void&#xD;&#xA;DataSet.set_EnforceConstraints(Boolean):Void&#xD;&#xA;DataSet.set_SchemaSerializationMode(SchemaSerializationMode):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CallBaseClassMethodsOnISerializableTypes" Category="Microsoft.Usage" CheckId="CA2236" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="29">Method 'MaterialsDBDataSet.MaterialsDBDataSet(SerializationInfo, StreamingContext)' should be modified to call its base class implementation.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="55">In method 'MaterialsDBDataSet.MaterialsDBDataSet(SerializationInfo, StreamingContext)', call System.IDisposable.Dispose on object 'ds' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="56">In method 'MaterialsDBDataSet.MaterialsDBDataSet(SerializationInfo, StreamingContext)', call System.IDisposable.Dispose on object 'new StringReader(strSchema)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="70">In method 'MaterialsDBDataSet.MaterialsDBDataSet(SerializationInfo, StreamingContext)', call System.IDisposable.Dispose on object 'new StringReader(strSchema)' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="53">In externally visible method 'MaterialsDBDataSet.MaterialsDBDataSet(SerializationInfo, StreamingContext)', validate parameter 'info' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSchemaSerializable()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="176">In method 'MaterialsDBDataSet.GetSchemaSerializable()', call System.IDisposable.Dispose on object 'stream' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="237">In method 'MaterialsDBDataSet.GetTypedDataSetSchema(XmlSchemaSet)', object 's1' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 's1' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="228">In method 'MaterialsDBDataSet.GetTypedDataSetSchema(XmlSchemaSet)', call System.IDisposable.Dispose on object 'ds' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="xs" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="228">In method 'MaterialsDBDataSet.GetTypedDataSetSchema(XmlSchemaSet)', correct the spelling of 'xs' in parameter name 'xs' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="236">In externally visible method 'MaterialsDBDataSet.GetTypedDataSetSchema(XmlSchemaSet)', validate parameter 'xs' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReadXmlSerializable(System.Xml.XmlReader)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="153">In method 'MaterialsDBDataSet.ReadXmlSerializable(XmlReader)', call System.IDisposable.Dispose on object 'ds' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MaterialsDBDataSet+MaterialsDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'MaterialsDBDataSet.MaterialsDataTable'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="290">'MaterialsDBDataSet.MaterialsDataTable.MaterialsDataTable()' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;MaterialsDBDataSet+MaterialsDataTable..ctor()&#xD;&#xA;DataTable.set_TableName(String):Void&#xD;&#xA;DataTable.BeginInit():Void</Issue>
             <Issue Certainty="95" Level="CriticalWarning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="290">'MaterialsDBDataSet.MaterialsDataTable.MaterialsDataTable()' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;MaterialsDBDataSet+MaterialsDataTable..ctor()&#xD;&#xA;DataTable.set_TableName(String):Void&#xD;&#xA;DataTable.BeginInit():Void&#xD;&#xA;MaterialsDBDataSet+MaterialsDataTable.InitClass():Void&#xD;&#xA;DataTable.get_Columns():DataColumnColl&#xD;&#xA;DataTable.EndInit():Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddMaterialsRow(System.String,System.Double)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Material" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="383">In member 'MaterialsDBDataSet.MaterialsDataTable.AddMaterialsRow(string, double)', correct the casing of 'Material' in parameter name 'Material' by changing it to 'material'.</Issue>
            </Message>
            <Message Id="Tensile" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="383">In member 'MaterialsDBDataSet.MaterialsDataTable.AddMaterialsRow(string, double)', correct the casing of 'Tensile' in parameter name 'TensileStrength' by changing it to 'tensile'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FindById(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Id" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="396">In member 'MaterialsDBDataSet.MaterialsDataTable.FindById(int)', correct the casing of 'Id' in parameter name 'Id' by changing it to 'id'. 'id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="531">In method 'MaterialsDBDataSet.MaterialsDataTable.GetTypedTableSchema(XmlSchemaSet)', object 's1' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 's1' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="508">In method 'MaterialsDBDataSet.MaterialsDataTable.GetTypedTableSchema(XmlSchemaSet)', call System.IDisposable.Dispose on object 'ds' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="xs" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="506">In method 'MaterialsDBDataSet.MaterialsDataTable.GetTypedTableSchema(XmlSchemaSet)', correct the spelling of 'xs' in parameter name 'xs' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="530">In externally visible method 'MaterialsDBDataSet.MaterialsDataTable.GetTypedTableSchema(XmlSchemaSet)', validate parameter 'xs' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnRowChanged(System.Data.DataRowChangeEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="466">In externally visible method 'MaterialsDBDataSet.MaterialsDataTable.OnRowChanged(DataRowChangeEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnRowChanging(System.Data.DataRowChangeEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="475">In externally visible method 'MaterialsDBDataSet.MaterialsDataTable.OnRowChanging(DataRowChangeEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnRowDeleted(System.Data.DataRowChangeEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="484">In externally visible method 'MaterialsDBDataSet.MaterialsDataTable.OnRowDeleted(DataRowChangeEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnRowDeleting(System.Data.DataRowChangeEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="493">In externally visible method 'MaterialsDBDataSet.MaterialsDataTable.OnRowDeleting(DataRowChangeEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MaterialsDBDataSet+MaterialsRowChangeEvent" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Rename 'MaterialsDBDataSet.MaterialsRowChangeEvent' to end in 'EventArgs'.</Issue>
          </Message>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'MaterialsDBDataSet.MaterialsRowChangeEvent'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="MaterialsDBDataSet+MaterialsRowChangeEventHandler" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'MaterialsDBDataSet.MaterialsRowChangeEventHandler'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
          <Message TypeName="UseGenericEventHandlerInstances" Category="Microsoft.Design" CheckId="CA1003" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Remove 'MaterialsDBDataSet.MaterialsRowChangeEventHandler' and replace its usage with EventHandler&lt;T&gt;</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="SetMaterial" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#BindingNavigatorDeleteItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetMaterialForm.cs" Line="68">Method 'SetMaterial.BindingNavigatorDeleteItem_Click(object, EventArgs)' passes a literal string as parameter 'caption' of a call to 'MessageBox.Show(string, string, MessageBoxButtons, MessageBoxIcon)'. Retrieve the following string(s) from a resource table instead: "Warning".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetMaterialForm.cs" Line="68">Method 'SetMaterial.BindingNavigatorDeleteItem_Click(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string, string, MessageBoxButtons, MessageBoxIcon)'. Retrieve the following string(s) from a resource table instead: "Can not delete a standard material.".</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetMaterialForm.cs" Line="68">Change 'SetMaterial.BindingNavigatorDeleteItem_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetMaterialForm.Designer.cs" Line="68">In method 'SetMaterial.InitializeComponent()', object 'idLabel' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'idLabel' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetMaterialForm.Designer.cs" Line="66">In method 'SetMaterial.InitializeComponent()', object 'materialLabel' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'materialLabel' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetMaterialForm.Designer.cs" Line="67">In method 'SetMaterial.InitializeComponent()', object 'tensileStrengthLabel' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'tensileStrengthLabel' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetMaterialForm.Designer.cs" Line="340">Method 'SetMaterial.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Add".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetMaterialForm.Designer.cs" Line="122">Method 'SetMaterial.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Cancel".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetMaterialForm.Designer.cs" Line="328">Method 'SetMaterial.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Delete".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetMaterialForm.Designer.cs" Line="102">Method 'SetMaterial.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Id:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetMaterialForm.Designer.cs" Line="84">Method 'SetMaterial.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Material:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetMaterialForm.Designer.cs" Line="111">Method 'SetMaterial.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Ok".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetMaterialForm.Designer.cs" Line="316">Method 'SetMaterial.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Save".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetMaterialForm.Designer.cs" Line="393">Method 'SetMaterial.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Set material".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetMaterialForm.Designer.cs" Line="93">Method 'SetMaterial.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Tensile Strength:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetMaterialForm.Designer.cs" Line="155">Method 'SetMaterial.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "bindingNavigator1".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.DataGridViewColumn.set_HeaderText(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetMaterialForm.Designer.cs" Line="356">Method 'SetMaterial.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'DataGridViewColumn.HeaderText.set(string)'. Retrieve the following string(s) from a resource table instead: "Id".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetMaterialForm.Designer.cs" Line="363">Method 'SetMaterial.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'DataGridViewColumn.HeaderText.set(string)'. Retrieve the following string(s) from a resource table instead: "Material".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetMaterialForm.Designer.cs" Line="369">Method 'SetMaterial.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'DataGridViewColumn.HeaderText.set(string)'. Retrieve the following string(s) from a resource table instead: "TensileStrength".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.ToolStripItem.set_AccessibleName(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetMaterialForm.Designer.cs" Line="210">Method 'SetMaterial.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.AccessibleName.set(string)'. Retrieve the following string(s) from a resource table instead: "Position".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.ToolStripItem.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetMaterialForm.Designer.cs" Line="214">Method 'SetMaterial.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "0".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetMaterialForm.Designer.cs" Line="165">Method 'SetMaterial.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Add new".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetMaterialForm.Designer.cs" Line="182">Method 'SetMaterial.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Delete".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetMaterialForm.Designer.cs" Line="192">Method 'SetMaterial.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Move first".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetMaterialForm.Designer.cs" Line="238">Method 'SetMaterial.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Move last".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetMaterialForm.Designer.cs" Line="229">Method 'SetMaterial.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Move next".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetMaterialForm.Designer.cs" Line="201">Method 'SetMaterial.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Move previous".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetMaterialForm.Designer.cs" Line="251">Method 'SetMaterial.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Save Data".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetMaterialForm.Designer.cs" Line="172">Method 'SetMaterial.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "of {0}".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.ToolStripItem.set_ToolTipText(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetMaterialForm.Designer.cs" Line="215">Method 'SetMaterial.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.ToolTipText.set(string)'. Retrieve the following string(s) from a resource table instead: "Current position".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetMaterialForm.Designer.cs" Line="173">Method 'SetMaterial.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.ToolTipText.set(string)'. Retrieve the following string(s) from a resource table instead: "Total number of items".</Issue>
            </Message>
            <Message Id="TensileStrength" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetMaterialForm.Designer.cs" Line="369">Correct the spelling of the unrecognized token 'TensileStrength' in the literal '"TensileStrength"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MaterialsBindingNavigatorSaveItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetMaterialForm.cs" Line="50">Method 'SetMaterial.MaterialsBindingNavigatorSaveItem_Click(object, EventArgs)' passes a literal string as parameter 'caption' of a call to 'MessageBox.Show(string, string, MessageBoxButtons, MessageBoxIcon)'. Retrieve the following string(s) from a resource table instead: "Warning".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetMaterialForm.cs" Line="54">Method 'SetMaterial.MaterialsBindingNavigatorSaveItem_Click(object, EventArgs)' passes a literal string as parameter 'caption' of a call to 'MessageBox.Show(string, string, MessageBoxButtons, MessageBoxIcon)'. Retrieve the following string(s) from a resource table instead: "Warning".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetMaterialForm.cs" Line="54">Method 'SetMaterial.MaterialsBindingNavigatorSaveItem_Click(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string, string, MessageBoxButtons, MessageBoxIcon)'. Retrieve the following string(s) from a resource table instead: "Are you sure you want to save changes?".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetMaterialForm.cs" Line="50">Method 'SetMaterial.MaterialsBindingNavigatorSaveItem_Click(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string, string, MessageBoxButtons, MessageBoxIcon)'. Retrieve the following string(s) from a resource table instead: "Incorrect Tensile Strength input.".</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetMaterialForm.cs" Line="50">Change 'SetMaterial.MaterialsBindingNavigatorSaveItem_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetMaterialForm.cs" Line="54">Change 'SetMaterial.MaterialsBindingNavigatorSaveItem_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Ok_btn_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetMaterialForm.cs" Line="25">Method 'SetMaterial.Ok_btn_Click(object, EventArgs)' passes a literal string as parameter 'caption' of a call to 'MessageBox.Show(string, string, MessageBoxButtons, MessageBoxIcon)'. Retrieve the following string(s) from a resource table instead: "Warning".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetMaterialForm.cs" Line="25">Method 'SetMaterial.Ok_btn_Click(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string, string, MessageBoxButtons, MessageBoxIcon)'. Retrieve the following string(s) from a resource table instead: "Select material, please.".</Issue>
            </Message>
            <Message Id="System.Double.TryParse(System.String,System.Double@)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetMaterialForm.cs" Line="29">'SetMaterial.Ok_btn_Click(object, EventArgs)' calls 'double.TryParse(string, out double)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetMaterialForm.cs" Line="25">Change 'SetMaterial.Ok_btn_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TensileStrength_su" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="su" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetMaterialForm.cs" Line="13">Correct the casing of 'su' in member name 'SetMaterial.TensileStrength_su' by changing it to 'SU'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetMaterialForm.cs" Line="13">Remove the underscores from member name 'SetMaterial.TensileStrength_su'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Vector3" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="OverrideGetHashCodeOnOverridingEquals" Category="Microsoft.Usage" CheckId="CA2218" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="Error">Since 'Vector3' redefines Equals, it should also redefine GetHashCode.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Double,System.Double)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="Vector3.cs" Line="15">Replace method 'Vector3.Vector3(double, double)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="x" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="Vector3.cs" Line="15">In method 'Vector3.Vector3(double, double)', consider providing a more meaningful name than parameter name 'x'.</Issue>
            </Message>
            <Message Id="y" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="Vector3.cs" Line="15">In method 'Vector3.Vector3(double, double)', consider providing a more meaningful name than parameter name 'y'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.Double,System.Double,System.Double)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="x" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="Vector3.cs" Line="23">In method 'Vector3.Vector3(double, double, double)', consider providing a more meaningful name than parameter name 'x'.</Issue>
            </Message>
            <Message Id="y" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="Vector3.cs" Line="23">In method 'Vector3.Vector3(double, double, double)', consider providing a more meaningful name than parameter name 'y'.</Issue>
            </Message>
            <Message Id="z" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="Vector3.cs" Line="23">In method 'Vector3.Vector3(double, double, double)', consider providing a more meaningful name than parameter name 'z'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AngleWith(MyCAD.Vector3)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="v" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="Vector3.cs" Line="138">In method 'Vector3.AngleWith(Vector3)', consider providing a more meaningful name than parameter name 'v'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="Vector3.cs" Line="138">In externally visible method 'Vector3.AngleWith(Vector3)', validate parameter 'v' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CopyOrMove(MyCAD.Vector3,MyCAD.Vector3)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="Vector3.cs" Line="181">In externally visible method 'Vector3.CopyOrMove(Vector3, Vector3)', validate parameter 'fromPoint' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="Vector3.cs" Line="181">In externally visible method 'Vector3.CopyOrMove(Vector3, Vector3)', validate parameter 'toPoint' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CrossProduct(MyCAD.Vector3,MyCAD.Vector3)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="v" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="Vector3.cs" Line="106">In method 'Vector3.CrossProduct(Vector3, Vector3)', correct the spelling of 'v' in parameter name 'v1' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="Vector3.cs" Line="106">In method 'Vector3.CrossProduct(Vector3, Vector3)', correct the spelling of 'v' in parameter name 'v2' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="Vector3.cs" Line="106">In externally visible method 'Vector3.CrossProduct(Vector3, Vector3)', validate parameter 'v1' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="Vector3.cs" Line="106">In externally visible method 'Vector3.CrossProduct(Vector3, Vector3)', validate parameter 'v2' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DistanceFrom(MyCAD.Vector3)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="v" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="Vector3.cs" Line="173">In method 'Vector3.DistanceFrom(Vector3)', consider providing a more meaningful name than parameter name 'v'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="Vector3.cs" Line="173">In externally visible method 'Vector3.DistanceFrom(Vector3)', validate parameter 'v' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DotProduct(MyCAD.Vector3,MyCAD.Vector3)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="v" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="Vector3.cs" Line="101">In method 'Vector3.DotProduct(Vector3, Vector3)', correct the spelling of 'v' in parameter name 'v1' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="Vector3.cs" Line="101">In method 'Vector3.DotProduct(Vector3, Vector3)', correct the spelling of 'v' in parameter name 'v2' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="Vector3.cs" Line="101">In externally visible method 'Vector3.DotProduct(Vector3, Vector3)', validate parameter 'v1' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="Vector3.cs" Line="101">In externally visible method 'Vector3.DotProduct(Vector3, Vector3)', validate parameter 'v2' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Equals(MyCAD.Vector3,System.Double)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="v" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="Vector3.cs" Line="146">In method 'Vector3.Equals(Vector3, double)', consider providing a more meaningful name than parameter name 'v'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="Vector3.cs" Line="146">In externally visible method 'Vector3.Equals(Vector3, double)', validate parameter 'v' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Equals(System.Object)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="Vector3.cs" Line="154">'obj', a parameter, is cast to type 'Vector3' multiple times in method 'Vector3.Equals(object)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetDistanceBetweenPoints(MyCAD.Vector3,MyCAD.Vector3)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="Vector3.cs" Line="207">In externally visible method 'Vector3.GetDistanceBetweenPoints(Vector3, Vector3)', validate parameter 'startPoint' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="Vector3.cs" Line="207">In externally visible method 'Vector3.GetDistanceBetweenPoints(Vector3, Vector3)', validate parameter 'endPoint' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetTranslatedPoint(MyCAD.Vector3,System.Double,System.Double,System.Double)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="Vector3.cs" Line="199">In externally visible method 'Vector3.GetTranslatedPoint(Vector3, double, double, double)', validate parameter 'point' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetUnitVector(MyCAD.Vector3,MyCAD.Vector3)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="Vector3.cs" Line="191">In externally visible method 'Vector3.GetUnitVector(Vector3, Vector3)', validate parameter 'startP' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="Vector3.cs" Line="191">In externally visible method 'Vector3.GetUnitVector(Vector3, Vector3)', validate parameter 'endP' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Round(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="num" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="Vector3.cs" Line="114">In method 'Vector3.Round(int)', correct the spelling of 'num' in parameter name 'numDigits' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#X" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="X" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Name="MemberMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="Vector3.cs" Line="30">Consider providing a more meaningful name than member name 'Vector3.X'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Y" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Y" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Name="MemberMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="Vector3.cs" Line="35">Consider providing a more meaningful name than member name 'Vector3.Y'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Z" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Z" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Name="MemberMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="Vector3.cs" Line="40">Consider providing a more meaningful name than member name 'Vector3.Z'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="MyCAD.Entities">
       <Types>
        <Type Name="EntityObject" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AbstractTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1012" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="CriticalWarning">Change the accessibility of all public constructors in 'EntityObject' to protected.</Issue>
          </Message>
          <Message TypeName="IdentifiersShouldDifferByMoreThanCase" Category="Microsoft.Naming" CheckId="CA1708" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
           <Issue Name="Member" Certainty="95" Level="Error">Change member names 'IsVisible' and 'isVisible' so that they differ by more than case.</Issue>
           <Issue Name="Member" Certainty="95" Level="Error">Change member names 'selected' and 'Selected' so that they differ by more than case.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#DeSelect()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DeSelect" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\Entities" File="EntityObject.cs" Line="52">The compound word 'DeSelect' in member name 'EntityObject.DeSelect()' exists as a discrete term. If your usage is intended to be single word, case it as 'Deselect' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="De" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\Entities" File="EntityObject.cs" Line="52">Correct the casing of 'De' in member name 'EntityObject.DeSelect()' by changing it to 'DE'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#isVisible" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'EntityObject.isVisible' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'EntityObject.selected' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Type" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Name="BaseType" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\Entities" File="EntityObject.cs" Line="25">The property name 'EntityObject.Type' is confusing given the existence of inherited method 'object.GetType()'. Rename or remove this property.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="MyCAD.EntryForms">
       <Types>
        <Type Name="Input_Values" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="95" Level="Error">Remove the underscores from type name 'Input_Values'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#BindingNavigatorDeleteItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.cs" Line="51">Method 'Input_Values.BindingNavigatorDeleteItem_Click(object, EventArgs)' passes a literal string as parameter 'caption' of a call to 'MessageBox.Show(string, string, MessageBoxButtons, MessageBoxIcon)'. Retrieve the following string(s) from a resource table instead: "Warning".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.cs" Line="51">Method 'Input_Values.BindingNavigatorDeleteItem_Click(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string, string, MessageBoxButtons, MessageBoxIcon)'. Retrieve the following string(s) from a resource table instead: "Can not delete a standard material.".</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.cs" Line="51">Change 'Input_Values.BindingNavigatorDeleteItem_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.Designer.cs" Line="96">In method 'Input_Values.InitializeComponent()', object 'idLabel' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'idLabel' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.Designer.cs" Line="97">In method 'Input_Values.InitializeComponent()', object 'materialLabel' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'materialLabel' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.Designer.cs" Line="98">In method 'Input_Values.InitializeComponent()', object 'tensileStrengthLabel' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'tensileStrengthLabel' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.Designer.cs" Line="728">Method 'Input_Values.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: " = ________________________________ = ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.Designer.cs" Line="695">Method 'Input_Values.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: " ________________________________ = ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.Designer.cs" Line="440">Method 'Input_Values.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "0".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.Designer.cs" Line="479">Method 'Input_Values.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "0".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.Designer.cs" Line="529">Method 'Input_Values.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "0".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.Designer.cs" Line="538">Method 'Input_Values.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "0".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.Designer.cs" Line="567">Method 'Input_Values.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "0".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.Designer.cs" Line="586">Method 'Input_Values.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "0".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.Designer.cs" Line="605">Method 'Input_Values.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "0".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.Designer.cs" Line="624">Method 'Input_Values.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "0".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.Designer.cs" Line="273">Method 'Input_Values.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Add".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.Designer.cs" Line="706">Method 'Input_Values.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Allowable force per inch of weld".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.Designer.cs" Line="739">Method 'Input_Values.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Allowable force per inch of weld".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.Designer.cs" Line="770">Method 'Input_Values.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Calculate".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.Designer.cs" Line="759">Method 'Input_Values.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Cancel".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.Designer.cs" Line="297">Method 'Input_Values.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Delete".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.Designer.cs" Line="674">Method 'Input_Values.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "FoS".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.Designer.cs" Line="750">Method 'Input_Values.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "FoS".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.Designer.cs" Line="577">Method 'Input_Values.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Fx: ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.Designer.cs" Line="596">Method 'Input_Values.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Fy: ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.Designer.cs" Line="615">Method 'Input_Values.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Fz: ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.Designer.cs" Line="127">Method 'Input_Values.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Id:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.Designer.cs" Line="370">Method 'Input_Values.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Inputs".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.Designer.cs" Line="178">Method 'Input_Values.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Material selection".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.Designer.cs" Line="136">Method 'Input_Values.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Material:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.Designer.cs" Line="520">Method 'Input_Values.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Mx: ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.Designer.cs" Line="558">Method 'Input_Values.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "My: ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.Designer.cs" Line="548">Method 'Input_Values.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Mz: ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.Designer.cs" Line="647">Method 'Input_Values.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Output".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.Designer.cs" Line="684">Method 'Input_Values.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Resultant force".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.Designer.cs" Line="717">Method 'Input_Values.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Resultant force".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.Designer.cs" Line="285">Method 'Input_Values.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Save".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.Designer.cs" Line="430">Method 'Input_Values.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Suggested parent material thicknes: ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.Designer.cs" Line="145">Method 'Input_Values.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Tensile Strength:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.Designer.cs" Line="460">Method 'Input_Values.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Weld (Leg) size (W):".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.Designer.cs" Line="450">Method 'Input_Values.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "in.".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.Designer.cs" Line="470">Method 'Input_Values.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "in.".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.DataGridViewColumn.set_HeaderText(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.Designer.cs" Line="323">Method 'Input_Values.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'DataGridViewColumn.HeaderText.set(string)'. Retrieve the following string(s) from a resource table instead: "Id".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.Designer.cs" Line="330">Method 'Input_Values.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'DataGridViewColumn.HeaderText.set(string)'. Retrieve the following string(s) from a resource table instead: "Material".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.Designer.cs" Line="336">Method 'Input_Values.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'DataGridViewColumn.HeaderText.set(string)'. Retrieve the following string(s) from a resource table instead: "TensileStrength".</Issue>
            </Message>
            <Message Id="FoS" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.Designer.cs" Line="674">Correct the spelling of the unrecognized token 'FoS' in the literal '"FoS"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.Designer.cs" Line="750">Correct the spelling of the unrecognized token 'FoS' in the literal '"FoS"'.</Issue>
            </Message>
            <Message Id="Fy" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.Designer.cs" Line="596">Correct the spelling of the unrecognized token 'Fy' in the literal '"Fy: "'.</Issue>
            </Message>
            <Message Id="Fz" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.Designer.cs" Line="615">Correct the spelling of the unrecognized token 'Fz' in the literal '"Fz: "'.</Issue>
            </Message>
            <Message Id="Mx" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.Designer.cs" Line="520">Correct the spelling of the unrecognized token 'Mx' in the literal '"Mx: "'.</Issue>
            </Message>
            <Message Id="Mz" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.Designer.cs" Line="548">Correct the spelling of the unrecognized token 'Mz' in the literal '"Mz: "'.</Issue>
            </Message>
            <Message Id="TensileStrength" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.Designer.cs" Line="336">Correct the spelling of the unrecognized token 'TensileStrength' in the literal '"TensileStrength"'.</Issue>
            </Message>
            <Message Id="thicknes" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.Designer.cs" Line="430">Correct the spelling of the unrecognized token 'thicknes' in the literal '"Suggested parent material thicknes: "'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MaterialsBindingNavigatorSaveItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.cs" Line="33">Method 'Input_Values.MaterialsBindingNavigatorSaveItem_Click(object, EventArgs)' passes a literal string as parameter 'caption' of a call to 'MessageBox.Show(string, string, MessageBoxButtons, MessageBoxIcon)'. Retrieve the following string(s) from a resource table instead: "Warning".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.cs" Line="37">Method 'Input_Values.MaterialsBindingNavigatorSaveItem_Click(object, EventArgs)' passes a literal string as parameter 'caption' of a call to 'MessageBox.Show(string, string, MessageBoxButtons, MessageBoxIcon)'. Retrieve the following string(s) from a resource table instead: "Warning".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.cs" Line="37">Method 'Input_Values.MaterialsBindingNavigatorSaveItem_Click(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string, string, MessageBoxButtons, MessageBoxIcon)'. Retrieve the following string(s) from a resource table instead: "Are you sure you want to save changes?".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.cs" Line="33">Method 'Input_Values.MaterialsBindingNavigatorSaveItem_Click(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string, string, MessageBoxButtons, MessageBoxIcon)'. Retrieve the following string(s) from a resource table instead: "Incorrect Tensile Strength input.".</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.cs" Line="33">Change 'Input_Values.MaterialsBindingNavigatorSaveItem_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.cs" Line="37">Change 'Input_Values.MaterialsBindingNavigatorSaveItem_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Ok_btn_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.cs" Line="90">Method 'Input_Values.Ok_btn_Click(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string)'. Retrieve the following string(s) from a resource table instead: "Calculation completed.".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.cs" Line="73">Method 'Input_Values.Ok_btn_Click(object, EventArgs)' passes a literal string as parameter 'caption' of a call to 'MessageBox.Show(string, string, MessageBoxButtons, MessageBoxIcon)'. Retrieve the following string(s) from a resource table instead: "Warning".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.cs" Line="79">Method 'Input_Values.Ok_btn_Click(object, EventArgs)' passes a literal string as parameter 'caption' of a call to 'MessageBox.Show(string, string, MessageBoxButtons, MessageBoxIcon)'. Retrieve the following string(s) from a resource table instead: "Warning".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.cs" Line="79">Method 'Input_Values.Ok_btn_Click(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string, string, MessageBoxButtons, MessageBoxIcon)'. Retrieve the following string(s) from a resource table instead: "Parent material thickness is not correct.".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.cs" Line="73">Method 'Input_Values.Ok_btn_Click(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string, string, MessageBoxButtons, MessageBoxIcon)'. Retrieve the following string(s) from a resource table instead: "Select material, please.".</Issue>
            </Message>
            <Message Id="System.Double.TryParse(System.String,System.Double@)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.cs" Line="84">'Input_Values.Ok_btn_Click(object, EventArgs)' calls 'double.TryParse(string, out double)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
            </Message>
            <Message Id="System.Convert.ToDouble(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.cs" Line="77">Because the behavior of 'Convert.ToDouble(string)' could vary based on the current user's locale settings, replace this call in 'Input_Values.Ok_btn_Click(object, EventArgs)' with a call to 'Convert.ToDouble(string, IFormatProvider)'. If the result of 'Convert.ToDouble(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Double)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.cs" Line="87">Because the behavior of 'Convert.ToString(double)' could vary based on the current user's locale settings, replace this call in 'Input_Values.Ok_btn_Click(object, EventArgs)' with a call to 'Convert.ToString(double, IFormatProvider)'. If the result of 'Convert.ToString(double, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.cs" Line="88">Because the behavior of 'Convert.ToString(double)' could vary based on the current user's locale settings, replace this call in 'Input_Values.Ok_btn_Click(object, EventArgs)' with a call to 'Convert.ToString(double, IFormatProvider)'. If the result of 'Convert.ToString(double, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.cs" Line="89">Because the behavior of 'Convert.ToString(double)' could vary based on the current user's locale settings, replace this call in 'Input_Values.Ok_btn_Click(object, EventArgs)' with a call to 'Convert.ToString(double, IFormatProvider)'. If the result of 'Convert.ToString(double, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.cs" Line="73">Change 'Input_Values.Ok_btn_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.cs" Line="79">Change 'Input_Values.Ok_btn_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.cs" Line="90">Change 'Input_Values.Ok_btn_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PassInputValuesToGraphicsForm()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.cs" Line="110">Method 'Input_Values.PassInputValuesToGraphicsForm()' passes a literal string as parameter 'caption' of a call to 'MessageBox.Show(string, string, MessageBoxButtons, MessageBoxIcon)'. Retrieve the following string(s) from a resource table instead: "Warning".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.cs" Line="110">Method 'Input_Values.PassInputValuesToGraphicsForm()' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string, string, MessageBoxButtons, MessageBoxIcon)'. Retrieve the following string(s) from a resource table instead: "Error. Check inputs and try again.".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.cs" Line="108">Modify 'Input_Values.PassInputValuesToGraphicsForm()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.Convert.ToDouble(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.cs" Line="98">Because the behavior of 'Convert.ToDouble(string)' could vary based on the current user's locale settings, replace this call in 'Input_Values.PassInputValuesToGraphicsForm()' with a call to 'Convert.ToDouble(string, IFormatProvider)'. If the result of 'Convert.ToDouble(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.cs" Line="99">Because the behavior of 'Convert.ToDouble(string)' could vary based on the current user's locale settings, replace this call in 'Input_Values.PassInputValuesToGraphicsForm()' with a call to 'Convert.ToDouble(string, IFormatProvider)'. If the result of 'Convert.ToDouble(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.cs" Line="100">Because the behavior of 'Convert.ToDouble(string)' could vary based on the current user's locale settings, replace this call in 'Input_Values.PassInputValuesToGraphicsForm()' with a call to 'Convert.ToDouble(string, IFormatProvider)'. If the result of 'Convert.ToDouble(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.cs" Line="101">Because the behavior of 'Convert.ToDouble(string)' could vary based on the current user's locale settings, replace this call in 'Input_Values.PassInputValuesToGraphicsForm()' with a call to 'Convert.ToDouble(string, IFormatProvider)'. If the result of 'Convert.ToDouble(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.cs" Line="102">Because the behavior of 'Convert.ToDouble(string)' could vary based on the current user's locale settings, replace this call in 'Input_Values.PassInputValuesToGraphicsForm()' with a call to 'Convert.ToDouble(string, IFormatProvider)'. If the result of 'Convert.ToDouble(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.cs" Line="103">Because the behavior of 'Convert.ToDouble(string)' could vary based on the current user's locale settings, replace this call in 'Input_Values.PassInputValuesToGraphicsForm()' with a call to 'Convert.ToDouble(string, IFormatProvider)'. If the result of 'Convert.ToDouble(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.cs" Line="104">Because the behavior of 'Convert.ToDouble(string)' could vary based on the current user's locale settings, replace this call in 'Input_Values.PassInputValuesToGraphicsForm()' with a call to 'Convert.ToDouble(string, IFormatProvider)'. If the result of 'Convert.ToDouble(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.cs" Line="105">Because the behavior of 'Convert.ToDouble(string)' could vary based on the current user's locale settings, replace this call in 'Input_Values.PassInputValuesToGraphicsForm()' with a call to 'Convert.ToDouble(string, IFormatProvider)'. If the result of 'Convert.ToDouble(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.cs" Line="110">Change 'Input_Values.PassInputValuesToGraphicsForm()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TextBox_Course_Leave(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.cs" Line="60">'Input_Values.TextBox_Course_Leave(object, EventArgs)' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.cs" Line="66">Method 'Input_Values.TextBox_Course_Leave(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "0".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.cs" Line="65">Method 'Input_Values.TextBox_Course_Leave(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string)'. Retrieve the following string(s) from a resource table instead: "Please, enter a VALID number.".</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.cs" Line="65">Change 'Input_Values.TextBox_Course_Leave(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Weld_size_textBox_TextChanged(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.cs" Line="128">Method 'Input_Values.Weld_size_textBox_TextChanged(object, EventArgs)' passes a literal string as parameter 'caption' of a call to 'MessageBox.Show(string, string, MessageBoxButtons, MessageBoxIcon)'. Retrieve the following string(s) from a resource table instead: "Warning".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.cs" Line="128">Method 'Input_Values.Weld_size_textBox_TextChanged(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string, string, MessageBoxButtons, MessageBoxIcon)'. Retrieve the following string(s) from a resource table instead: "Parenet material thickness is not correct".</Issue>
            </Message>
            <Message Id="Parenet" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.cs" Line="128">Correct the spelling of the unrecognized token 'Parenet' in the literal '"Parenet material thickness is not correct"'.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Double)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.cs" Line="125">Because the behavior of 'Convert.ToString(double)' could vary based on the current user's locale settings, replace this call in 'Input_Values.Weld_size_textBox_TextChanged(object, EventArgs)' with a call to 'Convert.ToString(double, IFormatProvider)'. If the result of 'Convert.ToString(double, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="Input_Values.cs" Line="128">Change 'Input_Values.Weld_size_textBox_TextChanged(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SetLineLengthForm" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Accept_btn_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetLineLengthForm.cs" Line="32">Method 'SetLineLengthForm.Accept_btn_Click(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string)'. Retrieve the following string(s) from a resource table instead: "Please enter a VALID positive number".</Issue>
            </Message>
            <Message Id="System.Convert.ToDouble(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetLineLengthForm.cs" Line="28">Because the behavior of 'Convert.ToDouble(string)' could vary based on the current user's locale settings, replace this call in 'SetLineLengthForm.Accept_btn_Click(object, EventArgs)' with a call to 'Convert.ToDouble(string, IFormatProvider)'. If the result of 'Convert.ToDouble(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetLineLengthForm.cs" Line="32">Change 'SetLineLengthForm.Accept_btn_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetLineLengthForm.Designer.cs" Line="67">Method 'SetLineLengthForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: " in.".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetLineLengthForm.Designer.cs" Line="89">Method 'SetLineLengthForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Cancel".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetLineLengthForm.Designer.cs" Line="46">Method 'SetLineLengthForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Line\'s length: ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetLineLengthForm.Designer.cs" Line="77">Method 'SetLineLengthForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Ok".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetLineLengthForm.Designer.cs" Line="112">Method 'SetLineLengthForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Set line\'s length".</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SetStartPoint" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Convert.ToString(System.Double)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetStartPoint.cs" Line="29">Because the behavior of 'Convert.ToString(double)' could vary based on the current user's locale settings, replace this call in 'SetStartPoint.SetStartPoint()' with a call to 'Convert.ToString(double, IFormatProvider)'. If the result of 'Convert.ToString(double, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Accept_btn_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetStartPoint.cs" Line="58">Method 'SetStartPoint.Accept_btn_Click(object, EventArgs)' passes a literal string as parameter 'caption' of a call to 'MessageBox.Show(string, string, MessageBoxButtons, MessageBoxIcon)'. Retrieve the following string(s) from a resource table instead: "Warning".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetStartPoint.cs" Line="58">Method 'SetStartPoint.Accept_btn_Click(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string, string, MessageBoxButtons, MessageBoxIcon)'. Retrieve the following string(s) from a resource table instead: "Select a starting point in combo box".</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetStartPoint.cs" Line="58">Change 'SetStartPoint.Accept_btn_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddImportedValuesToTextBoxes()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetStartPoint.cs" Line="68">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'SetStartPoint.AddImportedValuesToTextBoxes()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetStartPoint.cs" Line="69">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'SetStartPoint.AddImportedValuesToTextBoxes()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetStartPoint.cs" Line="70">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'SetStartPoint.AddImportedValuesToTextBoxes()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetStartPoint.cs" Line="71">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'SetStartPoint.AddImportedValuesToTextBoxes()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetStartPoint.cs" Line="72">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'SetStartPoint.AddImportedValuesToTextBoxes()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetStartPoint.cs" Line="73">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'SetStartPoint.AddImportedValuesToTextBoxes()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetStartPoint.Designer.cs" Line="70">Method 'SetStartPoint.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Cancel".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetStartPoint.Designer.cs" Line="257">Method 'SetStartPoint.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Line\'s length:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetStartPoint.Designer.cs" Line="58">Method 'SetStartPoint.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Ok".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetStartPoint.Designer.cs" Line="234">Method 'SetStartPoint.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Select a point to start drawing:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetStartPoint.Designer.cs" Line="285">Method 'SetStartPoint.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "SetStartPoint".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetStartPoint.Designer.cs" Line="95">Method 'SetStartPoint.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "X1:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetStartPoint.Designer.cs" Line="210">Method 'SetStartPoint.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "X2:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetStartPoint.Designer.cs" Line="118">Method 'SetStartPoint.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Y1:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetStartPoint.Designer.cs" Line="187">Method 'SetStartPoint.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Y2:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetStartPoint.Designer.cs" Line="141">Method 'SetStartPoint.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Z1:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetStartPoint.Designer.cs" Line="164">Method 'SetStartPoint.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Z2:".</Issue>
            </Message>
            <Message Id="SetStartPoint" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\EntryForms" File="SetStartPoint.Designer.cs" Line="285">Correct the spelling of the unrecognized token 'SetStartPoint' in the literal '"SetStartPoint"'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="MyCAD.MaterialsDBDataSetTableAdapters">
       <Types>
        <Type Name="MaterialsTableAdapter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CommandCollection" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="749">Change 'MaterialsTableAdapter.CommandCollection' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Delete(System.Int32,System.String,System.Double)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Original" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="882">In member 'MaterialsTableAdapter.Delete(int, string, double)', correct the casing of 'Original' in parameter name 'Original_Id' by changing it to 'original'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="882">In member 'MaterialsTableAdapter.Delete(int, string, double)', correct the casing of 'Original' in parameter name 'Original_Material' by changing it to 'original'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="882">In member 'MaterialsTableAdapter.Delete(int, string, double)', correct the casing of 'Original' in parameter name 'Original_TensileStrength' by changing it to 'original'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="882">In member 'MaterialsTableAdapter.Delete(int, string, double)', remove the underscores from parameter name 'Original_Id'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="882">In member 'MaterialsTableAdapter.Delete(int, string, double)', remove the underscores from parameter name 'Original_Material'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="882">In member 'MaterialsTableAdapter.Delete(int, string, double)', remove the underscores from parameter name 'Original_TensileStrength'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Fill(MyCAD.MaterialsDBDataSet+MaterialsDataTable)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="831">In externally visible method 'MaterialsTableAdapter.Fill(MaterialsDBDataSet.MaterialsDataTable)', validate parameter 'dataTable' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetData()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="843">In method 'MaterialsTableAdapter.GetData()', object 'dataTable' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dataTable' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="842">Change 'MaterialsTableAdapter.GetData()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Insert(System.String,System.Double)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Material" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="911">In member 'MaterialsTableAdapter.Insert(string, double)', correct the casing of 'Material' in parameter name 'Material' by changing it to 'material'.</Issue>
            </Message>
            <Message Id="Tensile" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="911">In member 'MaterialsTableAdapter.Insert(string, double)', correct the casing of 'Tensile' in parameter name 'TensileStrength' by changing it to 'tensile'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Transaction" Kind="Property" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_Transaction()" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="723">'MaterialsTableAdapter.Transaction.get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Update(System.String,System.Double,System.Int32,System.String,System.Double)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Material" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="976">In member 'MaterialsTableAdapter.Update(string, double, int, string, double)', correct the casing of 'Material' in parameter name 'Material' by changing it to 'material'.</Issue>
            </Message>
            <Message Id="Original" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="976">In member 'MaterialsTableAdapter.Update(string, double, int, string, double)', correct the casing of 'Original' in parameter name 'Original_Id' by changing it to 'original'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="976">In member 'MaterialsTableAdapter.Update(string, double, int, string, double)', correct the casing of 'Original' in parameter name 'Original_Material' by changing it to 'original'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="976">In member 'MaterialsTableAdapter.Update(string, double, int, string, double)', correct the casing of 'Original' in parameter name 'Original_TensileStrength' by changing it to 'original'.</Issue>
            </Message>
            <Message Id="Tensile" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="976">In member 'MaterialsTableAdapter.Update(string, double, int, string, double)', correct the casing of 'Tensile' in parameter name 'TensileStrength' by changing it to 'tensile'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="976">In member 'MaterialsTableAdapter.Update(string, double, int, string, double)', remove the underscores from parameter name 'Original_Id'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="976">In member 'MaterialsTableAdapter.Update(string, double, int, string, double)', remove the underscores from parameter name 'Original_Material'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="976">In member 'MaterialsTableAdapter.Update(string, double, int, string, double)', remove the underscores from parameter name 'Original_TensileStrength'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Update(System.String,System.Double,System.Int32,System.String,System.Double,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Id" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="939">In member 'MaterialsTableAdapter.Update(string, double, int, string, double, int)', correct the casing of 'Id' in parameter name 'Id' by changing it to 'id'. 'id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="Material" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="939">In member 'MaterialsTableAdapter.Update(string, double, int, string, double, int)', correct the casing of 'Material' in parameter name 'Material' by changing it to 'material'.</Issue>
            </Message>
            <Message Id="Original" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="939">In member 'MaterialsTableAdapter.Update(string, double, int, string, double, int)', correct the casing of 'Original' in parameter name 'Original_Id' by changing it to 'original'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="939">In member 'MaterialsTableAdapter.Update(string, double, int, string, double, int)', correct the casing of 'Original' in parameter name 'Original_Material' by changing it to 'original'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="939">In member 'MaterialsTableAdapter.Update(string, double, int, string, double, int)', correct the casing of 'Original' in parameter name 'Original_TensileStrength' by changing it to 'original'.</Issue>
            </Message>
            <Message Id="Tensile" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="939">In member 'MaterialsTableAdapter.Update(string, double, int, string, double, int)', correct the casing of 'Tensile' in parameter name 'TensileStrength' by changing it to 'tensile'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="939">In member 'MaterialsTableAdapter.Update(string, double, int, string, double, int)', remove the underscores from parameter name 'Original_Id'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="939">In member 'MaterialsTableAdapter.Update(string, double, int, string, double, int)', remove the underscores from parameter name 'Original_Material'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="939">In member 'MaterialsTableAdapter.Update(string, double, int, string, double, int)', remove the underscores from parameter name 'Original_TensileStrength'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TableAdapterManager" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetRealUpdatedRows(System.Data.DataRow[],System.Collections.Generic.List`1&lt;System.Data.DataRow&gt;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="1127">The 'this' parameter (or 'Me' in Visual Basic) of 'TableAdapterManager.GetRealUpdatedRows(DataRow[], List&lt;DataRow&gt;)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateAll(MyCAD.MaterialsDBDataSet)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="1188">In method 'TableAdapterManager.UpdateAll(MaterialsDBDataSet)', call System.IDisposable.Dispose on object 'backupDataSet' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="1259">Object 'workConnection' can be disposed more than once in method 'TableAdapterManager.UpdateAll(MaterialsDBDataSet)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1259</Issue>
            </Message>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="1164">'TableAdapterManager.UpdateAll(MaterialsDBDataSet)' creates an exception of type 'ApplicationException', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="1178">'TableAdapterManager.UpdateAll(MaterialsDBDataSet)' creates an exception of type 'ApplicationException', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message Id="TableAdapter" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="1164">Correct the spelling of the unrecognized token 'TableAdapter' in the literal '"TableAdapterManager contains no connection information. Set each TableAdapterMan..."'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="1164">Correct the spelling of the unrecognized token 'TableAdapter' in the literal '"TableAdapterManager contains no connection information. Set each TableAdapterMan..."'.</Issue>
            </Message>
            <Message Id="TableAdapterManager" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="1164">Correct the spelling of the unrecognized token 'TableAdapterManager' in the literal '"TableAdapterManager contains no connection information. Set each TableAdapterMan..."'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="1164">Correct the spelling of the unrecognized token 'TableAdapterManager' in the literal '"TableAdapterManager contains no connection information. Set each TableAdapterMan..."'.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="1236">'TableAdapterManager.UpdateAll(MaterialsDBDataSet)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD" File="MaterialsDBDataSet.Designer.cs" Line="1188">Be sure to set the DataSet Locale property wherever 'TableAdapterManager.UpdateAll(MaterialsDBDataSet)' creates an instance of that type.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="MyCAD.Methods">
       <Types>
        <Type Name="Method" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#DistanceFromLine(MyCAD.Entities.Line,MyCAD.Vector3,MyCAD.Vector3&amp;,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="2#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\Methods" File="Method.cs" Line="117">Consider a design that does not require that 'closest' be an out parameter.</Issue>
            </Message>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\Methods" File="Method.cs" Line="117">Replace method 'Method.DistanceFromLine(Line, Vector3, out Vector3, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Is" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\Methods" File="Method.cs" Line="117">In member 'Method.DistanceFromLine(Line, Vector3, out Vector3, bool)', correct the casing of 'Is' in parameter name 'IsExtended' by changing it to 'is'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\Methods" File="Method.cs" Line="117">In externally visible method 'Method.DistanceFromLine(Line, Vector3, out Vector3, bool)', validate parameter 'line' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\Methods" File="Method.cs" Line="122">In externally visible method 'Method.DistanceFromLine(Line, Vector3, out Vector3, bool)', validate parameter 'point' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Epsilon" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Method.Epsilon' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsEqual(System.Double,System.Double,System.Double)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="d" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\Methods" File="Method.cs" Line="66">In method 'Method.IsEqual(double, double, double)', correct the spelling of 'd' in parameter name 'd1' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\Methods" File="Method.cs" Line="66">In method 'Method.IsEqual(double, double, double)', correct the spelling of 'd' in parameter name 'd2' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsMouseOnEntity(System.Collections.Generic.List`1&lt;MyCAD.Entities.EntityObject&gt;,MyCAD.Vector3,System.Drawing.PointF[],System.Int32&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="3#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\Methods" File="Method.cs" Line="164">Consider a design that does not require that 'index' be an out parameter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\Methods" File="Method.cs" Line="164">Change 'List&lt;EntityObject&gt;' in 'Method.IsMouseOnEntity(List&lt;EntityObject&gt;, Vector3, PointF[], out int)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="rect" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\Methods" File="Method.cs" Line="164">In member 'Method.IsMouseOnEntity(List&lt;EntityObject&gt;, Vector3, PointF[], out int)', correct the casing of 'rect' in parameter name 'cursor_rect' by changing it to 'Rect'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\Methods" File="Method.cs" Line="164">In member 'Method.IsMouseOnEntity(List&lt;EntityObject&gt;, Vector3, PointF[], out int)', remove the underscores from parameter name 'cursor_rect'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\Methods" File="Method.cs" Line="166">In externally visible method 'Method.IsMouseOnEntity(List&lt;EntityObject&gt;, Vector3, PointF[], out int)', validate parameter 'entities' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsPointInPolyline(System.Drawing.PointF[],MyCAD.Vector3)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\Methods" File="Method.cs" Line="190">In method 'Method.IsPointInPolyline(PointF[], Vector3)', call System.IDisposable.Dispose on object 'new GraphicsPath()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsZero(System.Double,System.Double)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="d" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\Methods" File="Method.cs" Line="71">In method 'Method.IsZero(double, double)', consider providing a more meaningful name than parameter name 'd'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LineAngle(MyCAD.Vector3,MyCAD.Vector3)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\Methods" File="Method.cs" Line="14">In externally visible method 'Method.LineAngle(Vector3, Vector3)', validate parameter 'start' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\Methods" File="Method.cs" Line="14">In externally visible method 'Method.LineAngle(Vector3, Vector3)', validate parameter 'end' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LineLineIntersection(MyCAD.Entities.Line,MyCAD.Entities.Line,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\Methods" File="Method.cs" Line="22">Replace method 'Method.LineLineIntersection(Line, Line, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\Methods" File="Method.cs" Line="22">In externally visible method 'Method.LineLineIntersection(Line, Line, bool)', validate parameter 'line1' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\Methods" File="Method.cs" Line="24">In externally visible method 'Method.LineLineIntersection(Line, Line, bool)', validate parameter 'line2' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ModifySelection(System.Int32,System.Collections.Generic.List`1&lt;MyCAD.Entities.EntityObject&gt;,MyCAD.Vector3,MyCAD.Vector3)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\Methods" File="Method.cs" Line="197">Change 'List&lt;EntityObject&gt;' in 'Method.ModifySelection(int, List&lt;EntityObject&gt;, Vector3, Vector3)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\Methods" File="Method.cs" Line="199">In externally visible method 'Method.ModifySelection(int, List&lt;EntityObject&gt;, Vector3, Vector3)', validate parameter 'entities' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetCursor(System.Int32,System.Single,System.Drawing.Color)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\Methods" File="Method.cs" Line="76">In method 'Method.SetCursor(int, float, Color)', object 'bmp' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'bmp' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\Methods" File="Method.cs" Line="96">In method 'Method.SetCursor(int, float, Color)', call System.IDisposable.Dispose on object 'new Pen(color, 2F)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\Methods" File="Method.cs" Line="97">In method 'Method.SetCursor(int, float, Color)', call System.IDisposable.Dispose on object 'new Pen(color, 2F)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\Methods" File="Method.cs" Line="108">In method 'Method.SetCursor(int, float, Color)', call System.IDisposable.Dispose on object 'new Pen(color, 2F)' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="MyCAD.OutputForms">
       <Types>
        <Type Name="LinesListForm" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\OutputForms" File="LinesListForm.cs" Line="15">Be sure to set the DataTable Locale property wherever 'LinesListForm.LinesListForm()' creates an instance of that type.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\OutputForms" File="LinesListForm.Designer.cs" Line="54">Method 'LinesListForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "LinesListForm".</Issue>
            </Message>
            <Message Id="LinesListForm" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\OutputForms" File="LinesListForm.Designer.cs" Line="54">Correct the spelling of the unrecognized token 'LinesListForm' in the literal '"LinesListForm"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Lines" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\OutputForms" File="LinesListForm.cs" Line="16">Change 'LinesListForm.Lines' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\OutputForms" File="LinesListForm.cs" Line="16">Change 'List&lt;Line&gt;' in 'LinesListForm.Lines' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="VerticesListForm" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\OutputForms" File="VerticesListForm.cs" Line="16">Be sure to set the DataTable Locale property wherever 'VerticesListForm.VerticesListForm()' creates an instance of that type.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\OutputForms" File="VerticesListForm.Designer.cs" Line="205">Method 'VerticesListForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "VerticesListForm".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\OutputForms" File="VerticesListForm.Designer.cs" Line="83">Method 'VerticesListForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "bindingNavigator1".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.ToolStripItem.set_AccessibleName(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\OutputForms" File="VerticesListForm.Designer.cs" Line="140">Method 'VerticesListForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.AccessibleName.set(string)'. Retrieve the following string(s) from a resource table instead: "Position".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.ToolStripItem.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\OutputForms" File="VerticesListForm.Designer.cs" Line="144">Method 'VerticesListForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "0".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\OutputForms" File="VerticesListForm.Designer.cs" Line="93">Method 'VerticesListForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Add new".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\OutputForms" File="VerticesListForm.Designer.cs" Line="113">Method 'VerticesListForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Delete".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\OutputForms" File="VerticesListForm.Designer.cs" Line="122">Method 'VerticesListForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Move first".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\OutputForms" File="VerticesListForm.Designer.cs" Line="168">Method 'VerticesListForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Move last".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\OutputForms" File="VerticesListForm.Designer.cs" Line="159">Method 'VerticesListForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Move next".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\OutputForms" File="VerticesListForm.Designer.cs" Line="131">Method 'VerticesListForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Move previous".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\OutputForms" File="VerticesListForm.Designer.cs" Line="181">Method 'VerticesListForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Save Data".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\OutputForms" File="VerticesListForm.Designer.cs" Line="103">Method 'VerticesListForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "of {0}".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.ToolStripItem.set_ToolTipText(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\OutputForms" File="VerticesListForm.Designer.cs" Line="145">Method 'VerticesListForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.ToolTipText.set(string)'. Retrieve the following string(s) from a resource table instead: "Current position".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\OutputForms" File="VerticesListForm.Designer.cs" Line="104">Method 'VerticesListForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.ToolTipText.set(string)'. Retrieve the following string(s) from a resource table instead: "Total number of items".</Issue>
            </Message>
            <Message Id="VerticesListForm" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\OutputForms" File="VerticesListForm.Designer.cs" Line="205">Correct the spelling of the unrecognized token 'VerticesListForm' in the literal '"VerticesListForm"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Vertices" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\OutputForms" File="VerticesListForm.cs" Line="17">Change 'VerticesListForm.Vertices' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\OutputForms" File="VerticesListForm.cs" Line="17">Change 'List&lt;Point&gt;' in 'VerticesListForm.Vertices' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="MyCAD.Properties">
       <Types>
        <Type Name="Resources" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'Resources' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Culture" Kind="Property" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_Culture()" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\Properties" File="Resources.Designer.cs" Line="56">'Resources.Culture.get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
            <Accessor Name="#set_Culture(System.Globalization.CultureInfo)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\Properties" File="Resources.Designer.cs" Line="59">'Resources.Culture.set(CultureInfo)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Line" Kind="Property" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_Line()" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\Properties" File="Resources.Designer.cs" Line="78">'Resources.Line.get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#OrthoImgAc_R" Kind="Property" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_OrthoImgAc_R()" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\Properties" File="Resources.Designer.cs" Line="98">'Resources.OrthoImgAc_R.get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#OrthoImgUn_R" Kind="Property" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_OrthoImgUn_R()" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\Properties" File="Resources.Designer.cs" Line="108">'Resources.OrthoImgUn_R.get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Point" Kind="Property" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_Point()" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\Properties" File="Resources.Designer.cs" Line="118">'Resources.Point.get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Point_R" Kind="Property" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_Point_R()" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\Properties" File="Resources.Designer.cs" Line="128">'Resources.Point_R.get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="Settings" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#cn" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_cn()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\Properties" File="Settings.Designer.cs" Line="44">'Settings.cn.get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#VerticesConnectionString" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_VerticesConnectionString()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2024-08-16 15:57:23Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\StressAnalysisTest2\Stress-Analysis-Automation-1.0.0-beta\MyCAD\Properties" File="Settings.Designer.cs" Line="33">'Settings.VerticesConnectionString.get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AbstractTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1012">
   <Name>Abstract types should not have constructors</Name>
   <Description>Public constructors for abstract types do not make sense because you cannot create instances of abstract types.</Description>
   <Resolution Name="Default">Change the accessibility of all public constructors in {0} to protected.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182126.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalWarning</MessageLevel>
   <File Name="designrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210">
   <Name>Assemblies should have valid strong names</Name>
   <Description>Either the assembly has no strong name, an invalid one, or the strong name is valid only because of the computer configuration. The assembly should not be deployed in this state. The most common causes of this are: 1) The assembly's contents were modified after it was signed. 2) The signing process failed. 3) The assembly was delay-signed. 4) A registry key existed that allowed the check to pass (where it would not have otherwise).</Description>
   <Resolution Name="NoStrongName">Sign {0} with a strong name key.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182127.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021">
   <Name>Avoid out parameters</Name>
   <Description>Using out parameters might indicate a design flaw. Although there are legitimate times to use out parameters, their use frequently indicates a design that does not conform to the design guidelines for managed code.</Description>
   <Resolution Name="Default">Consider a design that does not require that {0} be an out parameter.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182131.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="designrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811">
   <Name>Avoid uncalled private code</Name>
   <Description>There is uncalled code that is not externally visible and is not a known runtime entry point. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">{0} appears to have no upstream public or protected callers.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182264.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812">
   <Name>Avoid uninstantiated internal classes</Name>
   <Description>An internal class was detected that is apparently never instantiated. This rule does not attempt to detect late-bound creation and will generate false positives if instances of a type are only created in this way (for example, by means of Activator.CreateInstance or by passing the type as an argument to a TypeConverter constructor).</Description>
   <Resolution Name="Default">{0} is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182265.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823">
   <Name>Avoid unused private fields</Name>
   <Description>Private fields were detected that do not appear to be accessed within the assembly. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">It appears that field {0} is never used or is only ever assigned to. Use this field or remove it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245042.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="CallBaseClassMethodsOnISerializableTypes" Category="Microsoft.Usage" CheckId="CA2236">
   <Name>Call base class methods on ISerializable types</Name>
   <Description>Derived ISerializable types must call the base class magic constructor and the base class GetObjectData method.</Description>
   <Resolution Name="Default">Method {0} should be modified to call its base class implementation.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182326.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="usagerules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227">
   <Name>Collection properties should be read only</Name>
   <Description>Properties that return collections should be read-only so that users cannot entirely replace the backing store. Users can still modify the contents of the collection by calling relevant methods on the collection. Note that the XmlSerializer class has special support for deserializing read-only collections. See the XmlSerializer overview for more information.</Description>
   <Resolution Name="Default">Change {0} to be read-only by removing the property setter.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182327.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702">
   <Name>Compound words should be cased correctly</Name>
   <Description>Avoid creating compound words from terms which exist in the dictionary as discrete terms. Do not create a compound word such as 'StopWatch' or 'PopUp'. These terms are recognized in the dictionary and should be cased as 'Stopwatch' and 'Popup'.</Description>
   <Resolution Name="MemberShouldBeDiscreteTerm">The compound word '{0}' in member name {1} exists as a discrete term. If your usage is intended to be single word, case it as '{2}' or strip the first token entirely if it represents any sort of Hungarian notation.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264474.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="80">Error</MessageLevel>
   <File Name="namingrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026">
   <Name>Default parameters should not be used</Name>
   <Description>Some programming languages do not support default parameters. Replace default parameters with method overloads that supply the default argument.</Description>
   <Resolution Name="Default">Replace method {0} with an overload that supplies all default arguments.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182135.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="designrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000">
   <Name>Dispose objects before losing scope</Name>
   <Description>If a disposable object is not explicitly disposed before all references to it are out of scope, the object will be disposed at some indeterminate time when the garbage collector runs the finalizer of the object. Because an exceptional event might occur that will prevent the finalizer of the object from running, the object should be explicitly disposed instead.</Description>
   <Resolution Name="ExceptionEdge">In method {0}, object {1} is not disposed along all exception paths. Call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Resolution Name="NonExceptionEdge">In method {0}, call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182289.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202">
   <Name>Do not dispose objects multiple times</Name>
   <Description>A correctly implemented Dispose method can be called multiple times without throwing an exception. However, this is not guaranteed and to avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.</Description>
   <Resolution Name="Default">Object {0} can be disposed more than once in method {1}. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1259</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182334.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303">
   <Name>Do not pass literals as localized parameters</Name>
   <Description>Literal strings that are embedded in source code are difficult to localize. Avoid passing literal strings as arguments in circumstances where a localized string is generally expected.</Description>
   <Resolution Name="KnownValue">Method {0} passes a literal string as parameter '{1}' of a call to {2}. Retrieve the following string(s) from a resource table instead: {3}.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182187.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214">
   <Name>Do not call overridable methods in constructors</Name>
   <Description>Virtual methods defined on the class should not be called from constructors. If a derived class has overridden the method, the derived class version will be called (before the derived class constructor is called).</Description>
   <Resolution Name="Default">{0} contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: {1}</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182331.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalWarning</MessageLevel>
   <File Name="usagerules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800">
   <Name>Do not cast unnecessarily</Name>
   <Description>Avoid duplicate casts where possible, since there is a cost associated with them.</Description>
   <Resolution Name="Local">{0}, a variable, is cast to type {1} multiple times in method {2}. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant {3} instruction.</Resolution>
   <Resolution Name="Parameter">{0}, a parameter, is cast to type {1} multiple times in method {2}. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant {3} instruction.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182271.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031">
   <Name>Do not catch general exception types</Name>
   <Description>You should not catch Exception or SystemException. Catching generic exception types can hide run-time problems from the library user, and can complicate debugging. You should catch only those exceptions that you can handle gracefully.</Description>
   <Resolution Name="Default">Modify {0} to catch a more specific exception than {1} or rethrow the exception.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182137.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051">
   <Name>Do not declare visible instance fields</Name>
   <Description>Instance fields that are visible outside of the type that declares them, limit your ability to change the implementation details for those data items. Use properties instead. They do not compromise usability or performance and they do provide flexibility in that they conceal the implementation details of the underlying data.</Description>
   <Resolution Name="Default">Because field {0} is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182141.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002">
   <Name>Do not expose generic lists</Name>
   <Description>Do not expose List&lt;T&gt; in object models. Use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt; instead. List&lt;T&gt; is meant to be used from implementation, not in object model API. List&lt;T&gt; is optimized for performance at the cost of long term versioning. For example, if you return List&lt;T&gt; to the client code, you will not ever be able to receive notifications when client code modifies the collection.</Description>
   <Resolution Name="Default">Change {0} in {1} to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182142.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806">
   <Name>Do not ignore method results</Name>
   <Description>The result of methods that return new instances of strings should be assigned to a variable and subsequently used. If the result of a method that creates a new object, such as String.ToLower(), is not assigned to a variable, the call is wasted.</Description>
   <Resolution Name="TryParse">{0} calls {1} but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182273.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201">
   <Name>Do not raise reserved exception types</Name>
   <Description>User code should not create and raise exceptions of certain types that are reserved by the runtime or which are of a too general exception type. Exception types that are too general include Exception, SystemException, and ApplicationException. Exception types that are reserved by the runtime include ThreadAbortException, OutOfMemoryException, ExecutionEngineException, and IndexOutOfRangeException.</Description>
   <Resolution Name="TooGeneric">{0} creates an exception of type {1}, an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182338.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="usagerules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709">
   <Name>Identifiers should be cased correctly</Name>
   <Description>Type, namespace, and member identifiers are Pascal-cased. Parameter identifiers are camel-cased. Two letter acronyms within these identifiers should be upper-cased, for example, use System.IO instead of System.Io. Acronyms of three or more letters should be Pascal-cased, for example, use System.Xml instead of System.XML. The pascal-casing convention capitalizes the first letter of each word, as in BackColor. The camel-casing convention formats the first letter of the first word in lowercase and capitalizes the first letter of all subsequent words, as in backgroundColor. Although it may be common practice for some two letter acronyms to not be fully capitalized, violations of this rule should not be excluded for this reason. For example, 'DbConnection', is common but incorrect; use DBConnection. A violation of this rule might be required for compatibility with existing, non-managed symbol schemes. In general, however, these symbols should not be visible outside the assembly that uses them.</Description>
   <Resolution Name="Assembly">Correct the casing of '{0}' in assembly name {1} by changing it to '{2}'.</Resolution>
   <Resolution Name="Member">Correct the casing of '{0}' in member name {1} by changing it to '{2}'.</Resolution>
   <Resolution Name="MemberParameter">In member {0}, correct the casing of '{1}' in parameter name {2} by changing it to '{3}'.</Resolution>
   <Resolution Name="MemberParameterAbbreviation">In member {0}, correct the casing of '{1}' in parameter name {2} by changing it to '{3}'. '{3}' is an abbreviation and therefore is not subject to acronym casing guidelines.</Resolution>
   <Resolution Name="Namespace">Correct the casing of '{0}' in namespace name '{1}' by changing it to '{2}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182240.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="85">Error</MessageLevel>
   <File Name="namingrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
   <Name>Identifiers should be spelled correctly</Name>
   <Description>The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</Description>
   <Resolution Name="Member">Correct the spelling of '{0}' in member name {1} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberMoreMeaningfulName">Consider providing a more meaningful name than member name {0}.</Resolution>
   <Resolution Name="MemberParameter">In method {0}, correct the spelling of '{1}' in parameter name {2} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberParameterMoreMeaningfulName">In method {0}, consider providing a more meaningful name than parameter name {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264492.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="namingrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldDifferByMoreThanCase" Category="Microsoft.Naming" CheckId="CA1708">
   <Name>Identifiers should differ by more than case</Name>
   <Description>Do not use names that require case sensitivity for uniqueness. Components must be fully usable from both case-sensitive and case-insensitive languages. Since case-insensitive languages cannot distinguish between two names within the same context that differ only by case, components must avoid this situation.</Description>
   <Resolution Name="Member">Change member names {0} and '{1}' so that they differ by more than case.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182242.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710">
   <Name>Identifiers should have correct suffix</Name>
   <Description>Types that extend certain base types have specified name suffixes. Types that extend Attribute, for example, should be suffixed in 'Attribute', as in ObsoleteAttribute. This rules checks types that extend several base types, including Attribute, Exception, EventArgs, IMembershipPermission, Stream, and others.</Description>
   <Resolution Name="Default">Rename {0} to end in '{1}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182244.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707">
   <Name>Identifiers should not contain underscores</Name>
   <Description>Do not use underscores when specifying identifiers. Some generated Visual Studio identifiers for applications contain underscore characters. Underscore characters should generally be avoided in public identifiers.</Description>
   <Resolution Name="Member">Remove the underscores from member name {0}.</Resolution>
   <Resolution Name="MemberParameter">In member {0}, remove the underscores from parameter name {1}.</Resolution>
   <Resolution Name="Type">Remove the underscores from type name {0}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182245.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240">
   <Name>Implement ISerializable correctly</Name>
   <Description>If a type is assignable to ISerializable, it should implement GetObjectData. For unsealed types, the GetObjectData method should be callable and overridable by derived types.</Description>
   <Resolution Name="Default">Add an implementation of GetObjectData to type {0}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182342.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="60">Error</MessageLevel>
   <File Name="usagerules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204">
   <Name>Literals should be spelled correctly</Name>
   <Description>This rule parses the literal string into words, tokenizing compound words, and checks the spelling of each word/token.</Description>
   <Resolution Name="Default">Correct the spelling of the unrecognized token '{0}' in the literal '{1}'.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/bb264488.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014">
   <Name>Mark assemblies with CLSCompliantAttribute</Name>
   <Description>Assemblies should explicitly state their CLS compliance using the CLSCompliant attribute. An assembly without this attribute is not CLS-compliant. Assemblies, modules, and types can be CLS-compliant even if some parts of the assembly, module, or type are not CLS-compliant. The following rules apply: 1) If the element is marked CLSCompliant, any noncompliant members must have the CLSCompliant attribute present with its argument set to false. 2) A comparable CLS-compliant alternative member must be supplied for each member that is not CLS-compliant.</Description>
   <Resolution Name="Default">Mark {0} with CLSCompliant(true) because it exposes externally visible types.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182156.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824">
   <Name>Mark assemblies with NeutralResourcesLanguageAttribute</Name>
   <Description>The NeutralResourcesLanguage attribute informs the ResourceManager of the language used to render the neutral culture's resources for an assembly. When looking up resources in the same culture as the neutral resources language, the ResourceManager automatically uses the resources located in the main assembly, instead of searching for a satellite assembly with the current user interface culture for the current thread. This will improve lookup performance for the first resource you load and can reduce your working set.</Description>
   <Resolution Name="Default">Because assembly {0} contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb385967.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822">
   <Name>Mark members as static</Name>
   <Description>Methods which do not access instance data or call instance methods can be marked as static (Shared in Visual Basic). After doing so, the compiler will emit non-virtual call sites to these members which will prevent a check at runtime for each call that ensures the current object pointer is non-null. This can result in a measurable performance gain for performance-sensitive code. In some cases, the failure to access the current object instance represents a correctness issue.</Description>
   <Resolution Name="Default">The 'this' parameter (or 'Me' in Visual Basic) of {0} is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245046.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034">
   <Name>Nested types should not be visible</Name>
   <Description>Do not use public, protected or protected internal (Protected Friend) nested types as a way of grouping types. Use namespaces for this purpose. There are very limited scenarios where nested types are the best design. Also, nested type member accessibility is not clearly understood by all audiences. Enumerators are exempt from this rule.</Description>
   <Resolution Name="Default">Do not nest type {0}. Alternatively, change its accessibility so that it is not externally visible.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182162.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211">
   <Name>Non-constant fields should not be visible</Name>
   <Description>Static fields should be constant unless you carefully manage access to the field using locks. Using static variables without making them thread safe can compromise execution state. This rule applies to managed code libraries. If the analyzed assembly is an application, it is usually safe to exclude violations of this rule.</Description>
   <Resolution Name="Default">Consider making {0} non-public or a constant.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182353.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="OverrideGetHashCodeOnOverridingEquals" Category="Microsoft.Usage" CheckId="CA2218">
   <Name>Override GetHashCode on overriding Equals</Name>
   <Description>When overriding Equals, you must also override GetHashCode to guarantee correct behavior with hashtables.</Description>
   <Resolution Name="Default">Since {0} redefines Equals, it should also redefine GetHashCode.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182358.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="usagerules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819">
   <Name>Properties should not return arrays</Name>
   <Description>Properties that return arrays are prone to code inefficiencies. Consider using a collection or making this a method. See the design guidelines for more information.</Description>
   <Resolution Name="Default">Change {0} to return a collection or make it a method.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/0fss9skc.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721">
   <Name>Property names should not match get methods</Name>
   <Description>A Get method was found with the same name as a property. Get methods and properties should have names that clearly distinguish their function. See the design guidelines for information regarding choosing properties over methods.</Description>
   <Resolution Name="BaseType">The property name {0} is confusing given the existence of inherited method {1}. Rename or remove this property.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182253.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200">
   <Name>Rethrow to preserve stack details</Name>
   <Description>Use the IL rethrow instruction to preserve original stack details when re-raising a caught exception.</Description>
   <Resolution Name="Default">{0} rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182363.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="usagerules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801">
   <Name>Review unused parameters</Name>
   <Description>Review parameters in non-virtual methods that are not used in the method body to ensure no correctness exists around failure to access them. Unused parameters incur maintenance and performance costs. Sometimes a violation of this rule can point to an implementation bug in the method (i.e. the parameter should actually have been used in the method body). Exclude warnings of this rule if the parameter has to exist because of backward compatibility.</Description>
   <Resolution Name="Default">Parameter {0} of {1} is never used. Remove the parameter or use it in the method body.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182268.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306">
   <Name>Set locale for data types</Name>
   <Description>In most cases, Locale should be explicitly set to CultureInfo.InvariantCulture on DataSet and DataTable instances. Upon creation of a DataSet or DataTable instance, the Locale is set to the current culture. In most cases, the Locale should be set to CultureInfo.InvariantCulture to guarantee proper sorting behavior in all cultures.</Description>
   <Resolution Name="Default">Be sure to set the {0} Locale property wherever {1} creates an instance of that type.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182188.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
   <Name>Specify IFormatProvider</Name>
   <Description>If an overload exists that takes an IFormatProvider argument, it should always be called in favor of an overload that does not. Some methods in the runtime convert a value to or from a string representation and take a string parameter that contains one or more characters, called format specifiers, which indicate how the value is to be converted. If the meaning of the format specifier varies by culture, a formatting object supplies the actual characters used in the string representation. In scenarios where sorting and comparison behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</Description>
   <Resolution Name="IFormatProviderAlternate">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be based on input from the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify {4}.</Resolution>
   <Resolution Name="IFormatProviderAlternateString">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify {4}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182190.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300">
   <Name>Specify MessageBoxOptions</Name>
   <Description>In order to run correctly on right-to-left systems, all calls to MessageBox.Show should use the overload that specifies MessageBoxOptions as an argument. Programs should detect whether they are running on a right-to-left system at run-time and pass the appropriate MessageBoxOptions value in order to display correctly.</Description>
   <Resolution Name="Default">Change {0} to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182191.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="UseGenericEventHandlerInstances" Category="Microsoft.Design" CheckId="CA1003">
   <Name>Use generic event handler instances</Name>
   <Description>Do not declare new delegates to be used as event handlers when targeting a version of the .NET Framework that supports generics. Use an instance EventHandler&lt;T&gt; instead.</Description>
   <Resolution Name="Default">Remove {0} and replace its usage with EventHandler&lt;T&gt;</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182178.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024">
   <Name>Use properties where appropriate</Name>
   <Description>Properties should be used instead of Get/Set methods in most situations. Methods are preferable to properties in the following situations: the operation is a conversion, is expensive or has an observable side-effect; the order of execution is important; calling the member twice in succession creates different results; a member is static but returns a mutable value; or the member returns an array.</Description>
   <Resolution Name="Default">Change {0} to a property if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182181.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="designrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062">
   <Name>Validate arguments of public methods</Name>
   <Description>All reference arguments passed to externally visible methods should be checked against null (Nothing in VB). If appropriate, throw a System.ArgumentNullException when the argument is null.</Description>
   <Resolution Name="Default">In externally visible method {0}, validate parameter '{1}' before using it.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182182.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="17.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
